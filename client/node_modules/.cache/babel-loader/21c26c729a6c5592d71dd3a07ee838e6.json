{"ast":null,"code":"import _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar LinkedList =\n/*#__PURE__*/\nfunction () {\n  function LinkedList() {\n    _classCallCheck(this, LinkedList);\n\n    this.head = null;\n    this.length = 0;\n    this.addToHead.apply(this, arguments);\n  }\n\n  _createClass(LinkedList, [{\n    key: \"_addSingleItemToHead\",\n    value: function _addSingleItemToHead(value) {\n      var newNode = {\n        value: value\n      };\n      newNode.next = this.head;\n      this.head = newNode;\n      this.length++;\n    }\n  }, {\n    key: \"addToHead\",\n    value: function addToHead() {\n      var _this = this;\n\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      values.forEach(function (value) {\n        return _this._addSingleItemToHead(value);\n      });\n      return this;\n    }\n  }, {\n    key: \"removeFromHead\",\n    value: function removeFromHead() {\n      if (this.length === 0) {\n        return undefined;\n      }\n\n      var value = this.head.value;\n      this.head = this.head.next;\n      this.length--;\n      return value;\n    }\n  }, {\n    key: \"find\",\n    value: function find(value) {\n      var thisNode = this.head;\n\n      while (thisNode) {\n        if (thisNode.value === value) {\n          return thisNode;\n        }\n\n        thisNode = thisNode.next;\n      }\n\n      return thisNode;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(value) {\n      if (this.length === 0) {\n        return undefined;\n      }\n\n      if (this.head.value === value) {\n        this.removeFromHead();\n        return this;\n      }\n\n      var previousNode = this.head;\n      var thisNode = previousNode.next;\n\n      while (thisNode) {\n        if (thisNode.value === value) {\n          break;\n        }\n\n        previousNode = thisNode;\n        thisNode = thisNode.next;\n      }\n\n      if (thisNode === null) {\n        return undefined;\n      }\n\n      previousNode.next = thisNode.next;\n      this.length--;\n      return this;\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nexport { LinkedList as default };","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/helpers/LinkedList.js"],"names":["LinkedList","head","length","addToHead","value","newNode","next","values","forEach","_addSingleItemToHead","undefined","thisNode","removeFromHead","previousNode"],"mappings":";;;IAAqBA,U;;;AACjB,wBAAsB;AAAA;;AAClB,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,SAAL;AACH;;;;yCAEoBC,K,EAAO;AACxB,UAAMC,OAAO,GAAG;AAAED,QAAAA,KAAK,EAALA;AAAF,OAAhB;AACAC,MAAAA,OAAO,CAACC,IAAR,GAAe,KAAKL,IAApB;AACA,WAAKA,IAAL,GAAYI,OAAZ;AACA,WAAKH,MAAL;AACH;;;gCAEoB;AAAA;;AAAA,wCAARK,MAAQ;AAARA,QAAAA,MAAQ;AAAA;;AACjBA,MAAAA,MAAM,CAACC,OAAP,CAAe,UAAAJ,KAAK;AAAA,eAAI,KAAI,CAACK,oBAAL,CAA0BL,KAA1B,CAAJ;AAAA,OAApB;AACA,aAAO,IAAP;AACH;;;qCAEgB;AACb,UAAI,KAAKF,MAAL,KAAgB,CAApB,EAAuB;AACnB,eAAOQ,SAAP;AACH;;AAED,UAAMN,KAAK,GAAG,KAAKH,IAAL,CAAUG,KAAxB;AACA,WAAKH,IAAL,GAAY,KAAKA,IAAL,CAAUK,IAAtB;AACA,WAAKJ,MAAL;AAEA,aAAOE,KAAP;AACH;;;yBAEIA,K,EAAO;AACR,UAAIO,QAAQ,GAAG,KAAKV,IAApB;;AAEA,aAAMU,QAAN,EAAgB;AACZ,YAAGA,QAAQ,CAACP,KAAT,KAAmBA,KAAtB,EAA6B;AACzB,iBAAOO,QAAP;AACH;;AACDA,QAAAA,QAAQ,GAAGA,QAAQ,CAACL,IAApB;AACH;;AACD,aAAOK,QAAP;AACH;;;2BAEMP,K,EAAO;AACV,UAAG,KAAKF,MAAL,KAAgB,CAAnB,EAAsB;AAClB,eAAOQ,SAAP;AACH;;AAED,UAAI,KAAKT,IAAL,CAAUG,KAAV,KAAoBA,KAAxB,EAA+B;AAC3B,aAAKQ,cAAL;AACA,eAAO,IAAP;AACH;;AAED,UAAIC,YAAY,GAAG,KAAKZ,IAAxB;AACA,UAAIU,QAAQ,GAAGE,YAAY,CAACP,IAA5B;;AAEA,aAAMK,QAAN,EAAgB;AACZ,YAAGA,QAAQ,CAACP,KAAT,KAAmBA,KAAtB,EAA6B;AACzB;AACH;;AAEDS,QAAAA,YAAY,GAAGF,QAAf;AACAA,QAAAA,QAAQ,GAAGA,QAAQ,CAACL,IAApB;AACH;;AAED,UAAIK,QAAQ,KAAK,IAAjB,EAAuB;AACnB,eAAOD,SAAP;AACH;;AAEDG,MAAAA,YAAY,CAACP,IAAb,GAAoBK,QAAQ,CAACL,IAA7B;AACA,WAAKJ,MAAL;AACA,aAAO,IAAP;AACH;;;;;;SAxEgBF,U","sourcesContent":["export default class LinkedList {\n    constructor(...value) {\n        this.head = null;\n        this.length = 0;\n        this.addToHead(...value);\n    }\n    \n    _addSingleItemToHead(value) {\n        const newNode = { value };\n        newNode.next = this.head;\n        this.head = newNode;\n        this.length++;\n    }\n\n    addToHead(...values) {\n        values.forEach(value => this._addSingleItemToHead(value));\n        return this;\n    }\n\n    removeFromHead() {\n        if (this.length === 0) {\n            return undefined;\n        }\n            \n        const value = this.head.value;\n        this.head = this.head.next;\n        this.length--;\n            \n        return value;\n    }\n\n    find(value) {\n        let thisNode = this.head;\n     \n        while(thisNode) {\n            if(thisNode.value === value) {\n                return thisNode;\n            }  \n            thisNode = thisNode.next;\n        }\n        return thisNode;\n    }\n\n    remove(value) {\n        if(this.length === 0) {\n            return undefined;\n        }\n        \n        if (this.head.value === value) {\n            this.removeFromHead();\n            return this;\n        }\n        \n        let previousNode = this.head;\n        let thisNode = previousNode.next;\n        \n        while(thisNode) {\n            if(thisNode.value === value) {\n                break;\n            }\n            \n            previousNode = thisNode;\n            thisNode = thisNode.next;\n        }\n        \n        if (thisNode === null) {\n            return undefined;\n        }\n        \n        previousNode.next = thisNode.next;\n        this.length--;\n        return this;\n    }\n}"]},"metadata":{},"sourceType":"module"}