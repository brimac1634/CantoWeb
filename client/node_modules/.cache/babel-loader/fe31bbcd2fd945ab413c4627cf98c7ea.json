{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/components/slide-up-entry/slide-up-entry.component.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { SwapSpinner } from \"react-spinners-kit\";\nimport EntryView from '../entry-view/entry-view.component';\nimport Icon from '../icon/icon.component';\nimport { setMobileEntry as _setMobileEntry } from '../../redux/search/search.actions';\nimport './slide-up-entry.styles.scss';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading.loading,\n    hash: state.router.location.hash\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMobileEntry: function setMobileEntry(entryID) {\n      return dispatch(_setMobileEntry(entryID));\n    }\n  };\n};\n\nvar SlideUpEntry = function SlideUpEntry(_ref) {\n  var isSelected = _ref.isSelected,\n      selectedEntry = _ref.selectedEntry,\n      setMobileEntry = _ref.setMobileEntry,\n      loading = _ref.loading,\n      updateFavs = _ref.updateFavs;\n  var entryViewMobile = isSelected ? 'visible-entry-view' : 'hidden-entry-view';\n  return ReactDOM.createPortal(React.createElement(\"span\", {\n    className: \"slide-up-entry\",\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, isSelected ? React.createElement(\"div\", {\n    className: \"back-div animate-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\xA0\") : null, React.createElement(\"div\", {\n    className: \"entry-view-container \".concat(entryViewMobile),\n    onClick: function onClick() {\n      return setMobileEntry('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"entry-view-sizer\",\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"slide-up-close\",\n    onClick: function onClick() {\n      return setMobileEntry('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    icon: \"multiply\",\n    iconStyle: \"dark\",\n    width: \"15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(EntryView, {\n    selectedEntry: selectedEntry,\n    updateFavs: updateFavs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"spinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(SwapSpinner, {\n    size: 60,\n    color: \"#ff7a8a\",\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))), document.body);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SlideUpEntry);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/components/slide-up-entry/slide-up-entry.component.js"],"names":["React","ReactDOM","connect","SwapSpinner","EntryView","Icon","setMobileEntry","mapStateToProps","state","loading","hash","router","location","mapDispatchToProps","dispatch","entryID","SlideUpEntry","isSelected","selectedEntry","updateFavs","entryViewMobile","createPortal","event","stopPropagation","document","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { SwapSpinner } from \"react-spinners-kit\";\n\nimport EntryView from '../entry-view/entry-view.component';\nimport Icon from '../icon/icon.component';\n\nimport { setMobileEntry } from '../../redux/search/search.actions';\n\nimport './slide-up-entry.styles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading.loading,\n    hash: state.router.location.hash,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetMobileEntry: (entryID) => dispatch(setMobileEntry(entryID)),\n\t}\n} \n\nconst SlideUpEntry = ({ isSelected, selectedEntry, setMobileEntry, loading, updateFavs }) => {\n\n\tconst entryViewMobile = isSelected \n\t\t\t? 'visible-entry-view' \n\t\t\t: 'hidden-entry-view'\n\n\treturn ReactDOM.createPortal(\n        <span className='slide-up-entry' onClick={event => event.stopPropagation()}>\n            {isSelected\n\t              ? <div className='back-div animate-in'>&nbsp;</div>\n\t              : null\n\t        }\n\t\t\t<div \n\t\t\t\tclassName={`entry-view-container ${entryViewMobile}`}\n\t\t\t\tonClick={()=>setMobileEntry('')}\n\t\t\t>\n\t\t\t\t<div className='entry-view-sizer' onClick={event => event.stopPropagation()}>\n\t\t\t\t\t<button \n                      className='slide-up-close' \n                      onClick={()=>setMobileEntry('')}\n                    >\n                        <Icon \n                          icon='multiply' \n                          iconStyle='dark' \n                          width='15'\n                        />\n                    </button>\n\t\t\t\t\t<EntryView\n\t\t\t\t\t\tselectedEntry={selectedEntry}\n\t\t\t\t\t\tupdateFavs={updateFavs} \n\t\t\t\t\t/>\n\t\t\t\t\t<div className='spinner'>\n\t\t                <SwapSpinner\n\t\t                  size={60}\n\t\t                  color='#ff7a8a'\n\t\t                  loading={loading}\n\t\t                />\n\t                </div>\n\t\t\t\t</div>\n\t\t\t</div>\n        </span>\n        , document.body\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SlideUpEntry);"]},"metadata":{},"sourceType":"module"}