{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/client/src/components/pop-up-alert/pop-up-alert.component.js\";\nimport React from 'react';\nimport './pop-up-alert.styles.css';\nimport Icon from '../icon/icon.component';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    alert: state.alert.alert\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    presentAlert: function presentAlert(alert) {\n      return dispatch(setAlert(alert));\n    }\n  };\n};\n\nvar PopUpAlert = function PopUpAlert(_ref) {\n  var _ref$alert = _ref.alert,\n      title = _ref$alert.title,\n      message = _ref$alert.message,\n      showAlert = _ref$alert.showAlert,\n      icon = _ref$alert.icon,\n      presentAlert = _ref.presentAlert;\n  var alertStatus = showAlert ? 'alertIsVisible' : 'alertIsHidden';\n\n  if (showAlert) {\n    setTimeout(function () {\n      var clearAlert = {\n        title: '',\n        message: '',\n        showAlert: false,\n        icon: ''\n      };\n      presentAlert(clearAlert);\n    }, 4000);\n  }\n\n  var renderIcon = function renderIcon() {\n    if (icon !== '' && icon != null) {\n      return React.createElement(\"div\", {\n        className: \"alert-icon-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert-input-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        iconSize: \"32\",\n        icon: icon,\n        color: \"cantoBlue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pop-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"\\xA0\"));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"alert \".concat(alertStatus),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, renderIcon(), React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, message)));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopUpAlert);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/components/pop-up-alert/pop-up-alert.component.js"],"names":["React","Icon","connect","setAlert","mapStateToProps","state","alert","mapDispatchToProps","dispatch","presentAlert","PopUpAlert","title","message","showAlert","icon","alertStatus","setTimeout","clearAlert","renderIcon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,+CAAzB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA;AADb,GAAP;AAGA,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNC,IAAAA,YAAY,EAAE,sBAACH,KAAD;AAAA,aAAWE,QAAQ,CAACL,QAAQ,CAACG,KAAD,CAAT,CAAnB;AAAA;AADR,GAAP;AAGA,CAJD;;AAMA,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAkE;AAAA,wBAA/DJ,KAA+D;AAAA,MAAtDK,KAAsD,cAAtDA,KAAsD;AAAA,MAA/CC,OAA+C,cAA/CA,OAA+C;AAAA,MAAtCC,SAAsC,cAAtCA,SAAsC;AAAA,MAA3BC,IAA2B,cAA3BA,IAA2B;AAAA,MAAnBL,YAAmB,QAAnBA,YAAmB;AACpF,MAAIM,WAAW,GAAGF,SAAS,GAAG,gBAAH,GAAsB,eAAjD;;AACA,MAAIA,SAAJ,EAAe;AACdG,IAAAA,UAAU,CAAC,YAAM;AAChB,UAAMC,UAAU,GAAG;AACZN,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,OAAO,EAAE,EAFG;AAGZC,QAAAA,SAAS,EAAE,KAHC;AAIZC,QAAAA,IAAI,EAAE;AAJM,OAAnB;AAMGL,MAAAA,YAAY,CAACQ,UAAD,CAAZ;AACH,KARS,EAQP,IARO,CAAV;AASA;;AAED,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,QAAIJ,IAAI,KAAK,EAAT,IAAeA,IAAI,IAAI,IAA3B,EAAiC;AAChC,aACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,IAAf;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,KAAK,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,EAIC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,CADD;AAQA;AACD,GAXD;;AAaA,SACC;AAAK,IAAA,SAAS,kBAAWC,WAAX,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,UAAU,EADZ,EAEC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,OAAJ,CAFD,CAFD,CADD;AASA,CApCD;;AAsCA,eAAeV,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CG,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './pop-up-alert.styles.css';\nimport Icon from '../icon/icon.component';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\talert: state.alert.alert\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tpresentAlert: (alert) => dispatch(setAlert(alert)),\n\t}\n}\n\nconst PopUpAlert = ({ alert: { title, message, showAlert, icon }, presentAlert }) => {\n\tlet alertStatus = showAlert ? 'alertIsVisible' : 'alertIsHidden'\n\tif (showAlert) {\n\t\tsetTimeout(() => {\n\t\t\tconst clearAlert = {\n\t\t        title: '',\n\t\t        message: '',\n\t\t        showAlert: false,\n\t\t        icon: '',\n\t\t    }\n\t\t    presentAlert(clearAlert);\n\t\t}, 4000)\n\t}\n\n\tconst renderIcon = () => {\n\t\tif (icon !== '' && icon != null) {\n\t\t\treturn (\n\t\t\t\t<div className='alert-icon-group'>\n\t\t\t\t\t<div className='alert-input-icon'>\n\t\t\t\t\t\t<Icon iconSize='32' icon={icon} color='cantoBlue'/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='pop-divider'>&nbsp;</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={`alert ${alertStatus}`}>\n\t\t\t{renderIcon()}\n\t\t\t<div className='message'>\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t<p>{message}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PopUpAlert);"]},"metadata":{},"sourceType":"module"}