{"ast":null,"code":"import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from './rootReducer';\nexport var history = createBrowserHistory();\nvar initialState = {};\nvar middlewares = [routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var logger = createLogger();\n  middlewares.push(logger);\n}\n\nvar store = createStore(createRootReducer(history), initialState, compose(applyMiddleware.apply(void 0, middlewares)));\nexport default store;","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/redux/store.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","createLogger","createRootReducer","history","initialState","middlewares","process","env","NODE_ENV","logger","push","store"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,eAA9B;AAEA,OAAO,IAAMC,OAAO,GAAGP,oBAAoB,EAApC;AAEP,IAAMQ,YAAY,GAAG,EAArB;AACA,IAAMC,WAAW,GAAG,CAACL,gBAAgB,CAACG,OAAD,CAAjB,CAApB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC3C,MAAMC,MAAM,GAAGR,YAAY,EAA3B;AACAI,EAAAA,WAAW,CAACK,IAAZ,CAAiBD,MAAjB;AACA;;AAED,IAAME,KAAK,GAAGZ,WAAW,CACvBG,iBAAiB,CAACC,OAAD,CADM,EAEvBC,YAFuB,EAGvBN,OAAO,CACLD,eAAe,MAAf,SAAmBQ,WAAnB,CADK,CAHgB,CAAzB;AAQA,eAAeM,KAAf","sourcesContent":["import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from './rootReducer';\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst middlewares = [routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n\tconst logger = createLogger();\n\tmiddlewares.push(logger);\n}\n\nconst store = createStore(\n  createRootReducer(history),\n  initialState,\n  compose(\n    applyMiddleware(...middlewares)\n  ),\n)\n\nexport default store"]},"metadata":{},"sourceType":"module"}