{"ast":null,"code":"import { connectionError } from './helpers';\nimport Cookies from 'universal-cookie';\nimport { optionAlert } from '../components/option-alert/option-alert.component';\nexport default (function (_ref) {\n  var _ref$endPoint = _ref.endPoint,\n      endPoint = _ref$endPoint === void 0 ? '' : _ref$endPoint,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'GET' : _ref$method,\n      body = _ref.body,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 20000 : _ref$timeout;\n  // ${process.env.REACT_APP_SERVER_URL}\n  var cookies = new Cookies();\n  var token = cookies.get('authToken');\n  return Promise.race([fetch(\"localhost:3000\".concat(endPoint), {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json',\n      'x-access-token': token ? token : ''\n    },\n    body: body ? JSON.stringify(body) : undefined\n  }), new Promise(function (_, reject) {\n    return setTimeout(function () {\n      return reject(new Error('timeout'));\n    }, timeout);\n  })]).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data && data.error != null) {\n      var _data$error = data.error,\n          title = _data$error.title,\n          message = _data$error.message;\n      optionAlert({\n        title: title,\n        message: message\n      });\n    }\n\n    return data;\n  }).catch(function () {\n    return connectionError();\n  });\n});","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/helpers/apiRequest.js"],"names":["connectionError","Cookies","optionAlert","endPoint","method","body","timeout","cookies","token","get","Promise","race","fetch","headers","JSON","stringify","undefined","_","reject","setTimeout","Error","then","res","json","data","error","title","message","catch"],"mappings":"AAAA,SAASA,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,mDAA5B;AAEA,gBAAe,gBAKT;AAAA,2BAJLC,QAIK;AAAA,MAJLA,QAIK,8BAJM,EAIN;AAAA,yBAHLC,MAGK;AAAA,MAHLA,MAGK,4BAHI,KAGJ;AAAA,MAFLC,IAEK,QAFLA,IAEK;AAAA,0BADLC,OACK;AAAA,MADLA,OACK,6BADK,KACL;AACF;AACA,MAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AACA,MAAMO,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,CAAd;AACA,SAAOC,OAAO,CAACC,IAAR,CAAa,CAACC,KAAK,yBAAkBT,QAAlB,GAA8B;AAC1DC,IAAAA,MAAM,EAANA,MAD0D;AAE1DS,IAAAA,OAAO,EAAE;AACC,sBAAgB,kBADjB;AAEC,wBAAkBL,KAAK,GAAGA,KAAH,GAAW;AAFnC,KAFiD;AAM1DH,IAAAA,IAAI,EAAEA,IAAI,GAAGS,IAAI,CAACC,SAAL,CAAeV,IAAf,CAAH,GAA0BW;AANsB,GAA9B,CAAN,EAQhB,IAAIN,OAAJ,CAAY,UAACO,CAAD,EAAIC,MAAJ;AAAA,WACRC,UAAU,CAAC;AAAA,aAAMD,MAAM,CAAC,IAAIE,KAAJ,CAAU,SAAV,CAAD,CAAZ;AAAA,KAAD,EAAqCd,OAArC,CADF;AAAA,GAAZ,CARgB,CAAb,EAYLe,IAZK,CAYA,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAZH,EAaLF,IAbK,CAaA,UAAAG,IAAI,EAAI;AACP,QAAIA,IAAI,IAAIA,IAAI,CAACC,KAAL,IAAc,IAA1B,EAAgC;AAAA,wBACDD,IAAI,CAACC,KADJ;AAAA,UACpBC,KADoB,eACpBA,KADoB;AAAA,UACbC,OADa,eACbA,OADa;AAE5BzB,MAAAA,WAAW,CAAC;AACRwB,QAAAA,KAAK,EAALA,KADQ;AAERC,QAAAA,OAAO,EAAPA;AAFQ,OAAD,CAAX;AAIH;;AACP,WAAOH,IAAP;AACA,GAtBK,EAuBLI,KAvBK,CAuBC;AAAA,WAAM5B,eAAe,EAArB;AAAA,GAvBD,CAAP;AAwBH,CAjCD","sourcesContent":["import { connectionError } from './helpers';\nimport Cookies from 'universal-cookie';\nimport { optionAlert } from '../components/option-alert/option-alert.component';\n\nexport default ({\n\tendPoint = '',\n\tmethod = 'GET',\n\tbody,\n\ttimeout = 20000\n}) => {\n    // ${process.env.REACT_APP_SERVER_URL}\n    const cookies = new Cookies();\n    const token = cookies.get('authToken')\n    return Promise.race([fetch(`localhost:3000${endPoint}`, {\n\t\tmethod,\n\t\theaders: {\n            'Content-Type': 'application/json',\n            'x-access-token': token ? token : ''\n        },\n\t\tbody: body ? JSON.stringify(body) : undefined\n\t}),\n        new Promise((_, reject) =>\n            setTimeout(() => reject(new Error('timeout')), timeout)\n        )\n    ])\n    \t.then(res => res.json())\n    \t.then(data => {\n            if (data && data.error != null) {\n                const { title, message } = data.error;\n                optionAlert({\n                    title,\n                    message\n                })\n            }\n    \t\treturn data\n    \t})\n    \t.catch(() => connectionError())\t\t\n}"]},"metadata":{},"sourceType":"module"}