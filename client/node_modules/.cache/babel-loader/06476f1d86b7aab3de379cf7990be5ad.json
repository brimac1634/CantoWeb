{"ast":null,"code":"import _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/client/src/components/option-alert/option-alert.component.js\";\nimport React, { Component } from 'react';\nimport './option-alert.styles.css';\nimport { render, unmountComponentAtNode } from 'react-dom';\nimport Button from '../button/button.component';\n\nvar OptionAlert =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(OptionAlert, _Component);\n\n  function OptionAlert() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OptionAlert);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OptionAlert)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n\n      _this.close();\n    };\n\n    _this.handleClickOverlay = function (event) {\n      var onClickOutside = _this.props.onClickOutside;\n\n      if (event.target === _this.overlay) {\n        onClickOutside();\n\n        _this.close();\n      }\n    };\n\n    _this.close = function () {\n      removeBodyClass();\n      removeOptionAlert();\n    };\n\n    _this.keyboardClose = function (event) {\n      var onKeypressEscape = _this.props.onKeypressEscape;\n\n      if (event.keyCode === 27) {\n        onKeypressEscape(event);\n\n        _this.close();\n      }\n    };\n\n    _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboardClose, false);\n    };\n\n    _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboardClose, false);\n\n      _this.props.willUnmount();\n    };\n\n    return _this;\n  }\n\n  _createClass(OptionAlert, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          message = _this$props.message,\n          buttons = _this$props.buttons;\n      return React.createElement(\"div\", {\n        className: \"alert-overlay\",\n        ref: function ref(dom) {\n          return _this2.overlay = dom;\n        },\n        onClick: this.handleClickOverlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"option-alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"option-alert-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, title && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, title), message, React.createElement(\"div\", {\n        className: \"option-alert-button-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, buttons.map(function (button, i) {\n        return React.createElement(Button, {\n          key: i,\n          title: button.label,\n          buttonType: \"ghost\",\n          width: \"80px\",\n          handleClick: function handleClick() {\n            return _this2.handleClickButton(button);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return OptionAlert;\n}(Component);\n\nOptionAlert.defaultProps = {\n  buttons: [{\n    label: 'Okay',\n    onClick: function onClick() {\n      return null;\n    }\n  }],\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n};\nexport { OptionAlert as default };\n\nfunction createOptionAlert(properties) {\n  var divTarget = document.getElementById('option-alert');\n\n  if (divTarget) {\n    render(React.createElement(OptionAlert, Object.assign({}, properties, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), divTarget);\n  } else {\n    divTarget = document.createElement('div');\n    divTarget.id = 'option-alert';\n    document.body.appendChild(divTarget);\n    render(React.createElement(OptionAlert, Object.assign({}, properties, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), divTarget);\n  }\n}\n\nfunction removeOptionAlert() {\n  var target = document.getElementById('option-alert');\n  unmountComponentAtNode(target);\n  target.parentNode.removeChild(target);\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('option-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('option-alert-body-element');\n}\n\nexport function optionAlert(properties) {\n  addBodyClass();\n  createOptionAlert(properties);\n}","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/components/option-alert/option-alert.component.js"],"names":["React","Component","render","unmountComponentAtNode","Button","OptionAlert","handleClickButton","button","onClick","close","handleClickOverlay","event","onClickOutside","props","target","overlay","removeBodyClass","removeOptionAlert","keyboardClose","onKeypressEscape","keyCode","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","willUnmount","title","message","buttons","dom","map","i","label","defaultProps","createOptionAlert","properties","divTarget","getElementById","createElement","id","body","appendChild","parentNode","removeChild","addBodyClass","classList","add","remove","optionAlert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './option-alert.styles.css';\nimport { render, unmountComponentAtNode } from 'react-dom'\nimport Button from '../button/button.component';\n\nexport default class OptionAlert extends Component {\n  static defaultProps = {\n    buttons: [\n      {\n        label: 'Okay',\n        onClick: () => null\n      },\n    ],\n    willUnmount: () => null,\n    onClickOutside: () => null,\n    onKeypressEscape: () => null\n  }\n\n  handleClickButton = button => {\n    if (button.onClick) button.onClick()\n    this.close()\n  }\n\n  handleClickOverlay = (event) => {\n    const { onClickOutside } = this.props\n    if (event.target === this.overlay) {\n      onClickOutside()\n      this.close()\n    }\n  }\n\n  close = () => {\n    removeBodyClass()\n    removeOptionAlert()\n  }\n\n  keyboardClose = event => {\n    const { onKeypressEscape } = this.props\n    if (event.keyCode === 27) {\n      onKeypressEscape(event)\n      this.close()\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.keyboardClose, false)\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.keyboardClose, false)\n    this.props.willUnmount()\n  }\n\n  render () {\n    const { title, message, buttons } = this.props\n\n    return (\n      <div\n        className='alert-overlay'\n        ref={dom => (this.overlay = dom)}\n        onClick={this.handleClickOverlay}\n      >\n        <div className='option-alert'>\n          <div className='option-alert-body'>\n            {title && <h2>{title}</h2>}\n            {message}\n            <div className='option-alert-button-group'>\n              {buttons.map((button, i) => (\n                <Button\n                  key={i}\n                  title={button.label}\n                  buttonType='ghost'\n                  width='80px'\n                  handleClick={() => this.handleClickButton(button)}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nfunction createOptionAlert (properties) {\n  let divTarget = document.getElementById('option-alert')\n  if (divTarget) {\n    render(<OptionAlert {...properties} />, divTarget)\n  } else {\n    divTarget = document.createElement('div')\n    divTarget.id = 'option-alert'\n    document.body.appendChild(divTarget)\n    render(<OptionAlert {...properties} />, divTarget)\n  }\n}\n\nfunction removeOptionAlert () {\n  const target = document.getElementById('option-alert')\n  unmountComponentAtNode(target)\n  target.parentNode.removeChild(target)\n}\n\nfunction addBodyClass () {\n  document.body.classList.add('option-alert-body-element')\n}\n\nfunction removeBodyClass () {\n  document.body.classList.remove('option-alert-body-element')\n}\n\nexport function optionAlert (properties) {\n  addBodyClass()\n  createOptionAlert(properties)\n}\n"]},"metadata":{},"sourceType":"module"}