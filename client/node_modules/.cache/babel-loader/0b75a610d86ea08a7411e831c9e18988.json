{"ast":null,"code":"import _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/learn-game/learn-game.component.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport LinkedList from '../../helpers/LinkedList';\nimport Button from '../../components/button/button.component';\nimport Icon from '../../components/icon/icon.component';\nimport SpeakerButton from '../../components/speaker-button/speaker-button.component';\nimport apiRequest from '../../helpers/apiRequest';\nimport { push } from 'connected-react-router';\nimport { setLoading as _setLoading } from '../../redux/loading/loading.actions';\nimport { routes } from '../../redux/routing/routing.constants';\nimport './learn-game.styles.scss';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.user.user,\n    search: state.router.location.search,\n    deck: state.deck.deck,\n    deckEntries: state.deck.deckEntries\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateURL: function updateURL(searchKey) {\n      return dispatch(push(searchKey));\n    },\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    }\n  };\n};\n\nvar LearnGame =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LearnGame, _Component);\n\n  function LearnGame(props) {\n    var _this;\n\n    _classCallCheck(this, LearnGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LearnGame).call(this, props));\n\n    _this.createGameList = function (entries) {\n      var setLoading = _this.props.setLoading;\n      setLoading(true);\n      var gameArray = [];\n      var gameList = new LinkedList();\n\n      var generateQuestions = function generateQuestions(cycles) {\n        while (cycles--) {\n          entries.forEach(function (entry, i) {\n            var entry_id = entry.entry_id,\n                canto_word = entry.canto_word,\n                jyutping = entry.jyutping,\n                english_word = entry.english_word;\n            var questionOptions = [canto_word, jyutping, english_word, entry_id];\n            var answerOptions = [canto_word, jyutping, english_word];\n\n            var randomQ = _this.getRandomNumber(questionOptions.length, []);\n\n            var randomA = _this.getRandomNumber(answerOptions.length, [randomQ]);\n\n            var node = {\n              id: i,\n              entry_id: entry_id,\n              question: questionOptions[randomQ],\n              answer: answerOptions[randomA],\n              options: [answerOptions[randomA]]\n            };\n            var answers = 3;\n            var excludes = [node.id];\n\n            while (answers--) {\n              var random = _this.getRandomNumber(entries.length, excludes);\n\n              excludes.push(random);\n              var nextEntry = entries[random];\n              var nextOption = [nextEntry.canto_word, nextEntry.jyutping, nextEntry.english_word];\n              node.options.push(nextOption[randomA]);\n            }\n\n            node.options = _this.shuffle(node.options);\n            gameArray.push(node);\n          });\n        }\n      };\n\n      generateQuestions(2);\n\n      var shuffled = _this.shuffle(gameArray);\n\n      shuffled.forEach(function (node) {\n        return gameList.addToHead(node);\n      });\n      setLoading(false);\n      return gameList;\n    };\n\n    _this.getRandomNumber = function (max, exclude) {\n      var random = Math.floor(Math.random() * Math.floor(max));\n\n      if (exclude) {\n        if (exclude.includes(random)) {\n          return _this.getRandomNumber(max, exclude);\n        } else {\n          return random;\n        }\n      } else {\n        return;\n      }\n    };\n\n    _this.shuffle = function (array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    _this.checkAnswer = function (answer) {\n      var _this$state = _this.state,\n          gameList = _this$state.gameList,\n          answerComplete = _this$state.answerComplete,\n          progress = _this$state.progress;\n\n      if (!answerComplete) {\n        var correctAnswer = gameList.head.value.answer;\n\n        _this.setState({\n          answer: answer,\n          answerComplete: true\n        });\n\n        if (correctAnswer === answer) {\n          var addToProgress = function addToProgress() {\n            progress.push({\n              entry_id: entry_id,\n              progress: 1\n            });\n          };\n\n          var entry_id = gameList.head.value.entry_id;\n          var i = progress.length;\n\n          if (i === 0) {\n            addToProgress();\n          } else {\n            while (i--) {\n              if (entry_id === progress[i].entry_id) {\n                progress[i].progress += 1;\n                break;\n              } else if (i === 0) {\n                addToProgress();\n              }\n            }\n          }\n\n          _this.setState({\n            progress: progress,\n            correctCount: _this.state.correctCount + 1,\n            correctOption: answer\n          });\n        } else {\n          // wrong\n          _this.setState({\n            correctOption: correctAnswer,\n            wrongOption: answer\n          });\n        }\n      }\n    };\n\n    _this.next = function () {\n      var _this$state2 = _this.state,\n          gameList = _this$state2.gameList,\n          head = _this$state2.gameList.head;\n\n      if (head) {\n        _this.setState({\n          gameList: gameList,\n          answerComplete: false,\n          correctOption: '',\n          wrongOption: ''\n        });\n\n        gameList.removeFromHead();\n      } else {\n        var _this$props = _this.props,\n            setLoading = _this$props.setLoading,\n            updateURL = _this$props.updateURL,\n            search = _this$props.search,\n            userID = _this$props.user.userID;\n        var DECK = routes.DECK;\n\n        if (Boolean(userID)) {\n          var progress = _this.state.progress;\n          setLoading(true);\n          apiRequest({\n            endPoint: '/update-progress',\n            method: 'POST',\n            body: {\n              user_id: userID,\n              entries: progress\n            }\n          }).then(function (data) {\n            setLoading(false);\n\n            if (data && data.error != null) {\n              var _data$error = data.error,\n                  title = _data$error.title,\n                  message = _data$error.message;\n              optionAlert({\n                title: title,\n                message: message\n              });\n            } else {\n              console.log('Progress Updated');\n            }\n\n            updateURL(\"\".concat(DECK).concat(search));\n          }).catch(function (err) {\n            console.log(err);\n            setLoading(false);\n          });\n        } else {\n          updateURL(\"\".concat(DECK).concat(search));\n        }\n      }\n    };\n\n    _this.state = {\n      gameList: {},\n      answerComplete: false,\n      answer: '',\n      correctOption: '',\n      wrongOption: '',\n      listLength: 0,\n      correctCount: 0,\n      progress: []\n    };\n    return _this;\n  }\n\n  _createClass(LearnGame, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          search = _this$props2.search,\n          deckEntries = _this$props2.deckEntries,\n          updateURL = _this$props2.updateURL;\n\n      if (deckEntries.length === 0) {\n        var DECK = routes.DECK;\n        updateURL(\"\".concat(DECK).concat(search));\n      } else {\n        //make linked list \n        var gameList = this.createGameList(deckEntries);\n        this.setState({\n          gameList: gameList,\n          listLength: gameList.length\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          gameList = _this$state3.gameList,\n          head = _this$state3.gameList.head,\n          answerComplete = _this$state3.answerComplete,\n          correctOption = _this$state3.correctOption,\n          wrongOption = _this$state3.wrongOption,\n          answer = _this$state3.answer,\n          listLength = _this$state3.listLength,\n          correctCount = _this$state3.correctCount;\n      var deck_name = this.props.deck.deck_name;\n      return React.createElement(\"div\", {\n        className: \"learn-game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, head && React.createElement(\"div\", {\n        className: \"game-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-container centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"question-card centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, isNaN(head.value.question) ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, head.value.question || '') : React.createElement(SpeakerButton, {\n        size: \"55\",\n        entryID: head.value.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"option-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, head.value.options.map(function (option) {\n        var correctChoice = option === correctOption && option === answer;\n        var color = option === correctOption ? 'var(--cantoPink)' : 'var(--cantoGray)';\n        var disable = answerComplete ? null : 'default-border';\n        var style = {\n          background: answerComplete ? color : null\n        };\n        return React.createElement(\"div\", {\n          key: option,\n          style: style,\n          className: \"option-box centered \".concat(disable),\n          onClick: function onClick() {\n            return _this2.checkAnswer(option);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, option), correctChoice && React.createElement(\"div\", {\n          style: {\n            background: 'var(--cantoBlue'\n          },\n          className: \"icon-stamp centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"like\",\n          color: \"cantoWhite\",\n          iconSize: \"54\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        })), option === wrongOption && React.createElement(\"div\", {\n          style: {\n            background: 'var(--cantoPink'\n          },\n          className: \"icon-stamp centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          icon: \"dislike\",\n          color: \"cantoWhite\",\n          iconSize: \"54\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        })));\n      }))), !head && React.createElement(\"div\", {\n        className: \"end-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"\".concat(deck_name, \" Deck\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"You got \".concat(correctCount, \" correct out of \").concat(listLength, \".\"))), React.createElement(\"div\", {\n        className: \"bottom-btns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"push-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"\".concat(deck_name, \" Deck\")), React.createElement(\"p\", {\n        className: \"button-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, !head ? 'Complete' : \"\".concat(listLength - gameList.length + 1, \" / \").concat(listLength)), React.createElement(Button, {\n        title: answerComplete || !head ? 'Next' : 'Skip',\n        buttonType: \"ghost\",\n        color: \"var(--cantoWhite)\",\n        margin: \"10px\",\n        height: \"44px\",\n        width: \"100px\",\n        handleClick: function handleClick() {\n          return _this2.next();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LearnGame;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnGame);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/learn-game/learn-game.component.js"],"names":["React","Component","connect","optionAlert","LinkedList","Button","Icon","SpeakerButton","apiRequest","push","setLoading","routes","mapStateToProps","state","ownProps","user","search","router","location","deck","deckEntries","mapDispatchToProps","dispatch","updateURL","searchKey","loading","LearnGame","props","createGameList","entries","gameArray","gameList","generateQuestions","cycles","forEach","entry","i","entry_id","canto_word","jyutping","english_word","questionOptions","answerOptions","randomQ","getRandomNumber","length","randomA","node","id","question","answer","options","answers","excludes","random","nextEntry","nextOption","shuffle","shuffled","addToHead","max","exclude","Math","floor","includes","array","currentIndex","temporaryValue","randomIndex","checkAnswer","answerComplete","progress","correctAnswer","head","value","setState","addToProgress","correctCount","correctOption","wrongOption","next","removeFromHead","userID","DECK","Boolean","endPoint","method","body","user_id","then","data","error","title","message","console","log","catch","err","listLength","deck_name","isNaN","map","option","correctChoice","color","disable","style","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport LinkedList from '../../helpers/LinkedList';\nimport Button from '../../components/button/button.component';\nimport Icon from '../../components/icon/icon.component';\nimport SpeakerButton from '../../components/speaker-button/speaker-button.component'; \nimport apiRequest from '../../helpers/apiRequest';\nimport { push } from 'connected-react-router';\nimport { setLoading } from '../../redux/loading/loading.actions';\nimport { routes } from '../../redux/routing/routing.constants';\n\nimport './learn-game.styles.scss';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  \tuser: state.user.user,\n  \tsearch: state.router.location.search,\n  \tdeck: state.deck.deck,\n    deckEntries: state.deck.deckEntries,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateURL: (searchKey) => dispatch(push(searchKey)),\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t}\n} \n\nclass LearnGame extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tgameList: {},\n\t\t\tanswerComplete: false,\n\t\t\tanswer: '',\n\t\t\tcorrectOption: '',\n\t\t\twrongOption: '',\n\t\t\tlistLength: 0,\n\t\t\tcorrectCount: 0,\n\t\t\tprogress: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { search, deckEntries, updateURL } = this.props;\n\t\tif (deckEntries.length === 0) {\n\t\t\tconst { DECK } = routes;\n\t\t\tupdateURL(`${DECK}${search}`)\n\t\t} else {\n\t\t\t//make linked list \n\t\t\tconst gameList = this.createGameList(deckEntries);\n\t\t\tthis.setState({\n\t\t\t\tgameList,\n\t\t\t\tlistLength: gameList.length\n\t\t\t});\n\t\t} \n\t}\n\n\tcreateGameList = (entries) => {\n\t\tconst { setLoading } = this.props;\n\t\tsetLoading(true);\n\t\tlet gameArray = [];\n\t\tlet gameList = new LinkedList();\n\t\tconst generateQuestions = (cycles) => {\n\t\t\twhile (cycles--) {\n\t\t\t\tentries.forEach((entry, i) => {\n\t\t\t\t\tconst { entry_id, canto_word, jyutping, english_word } = entry;\n\t\t\t\t\tconst questionOptions = [canto_word, jyutping, english_word, entry_id];\n\t\t\t\t\tconst answerOptions = [canto_word, jyutping, english_word];\n\t\t\t\t\tconst randomQ = this.getRandomNumber(questionOptions.length, []);\n\t\t\t\t\tconst randomA = this.getRandomNumber(answerOptions.length, [randomQ])\n\t\t\t\t\tlet node = {\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tentry_id,\n\t\t\t\t\t\tquestion: questionOptions[randomQ],\n\t\t\t\t\t\tanswer: answerOptions[randomA],\n\t\t\t\t\t\toptions: [answerOptions[randomA]]\n\t\t\t\t\t}\n\n\t\t\t\t\tlet answers = 3;\n\t\t\t\t\tlet excludes = [node.id];\n\t\t\t\t\twhile (answers--) {\n\t\t\t\t\t\tconst random = this.getRandomNumber(entries.length, excludes)\n\t\t\t\t\t\texcludes.push(random)\n\t\t\t\t\t\tconst nextEntry = entries[random];\n\t\t\t\t\t\tconst nextOption = [nextEntry.canto_word, nextEntry.jyutping, nextEntry.english_word];\n\t\t\t\t\t\tnode.options.push(nextOption[randomA]);\n\t\t\t\t\t}\n\t\t\t\t\tnode.options = this.shuffle(node.options);\n\t\t\t\t\tgameArray.push(node);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tgenerateQuestions(2);\n\t\tconst shuffled = this.shuffle(gameArray);\n\t\tshuffled.forEach(node => gameList.addToHead(node));\n\t\tsetLoading(false);\n\t\treturn gameList\n\t}\n\n\tgetRandomNumber = (max, exclude) => {\n\t\tlet random = Math.floor(Math.random() * Math.floor(max));\n\t\tif (exclude) {\n\t\t\tif (exclude.includes(random)){\n\t\t  \t\treturn this.getRandomNumber(max, exclude);\n\t\t  \t} else {\n\t\t  \t\treturn random;\n\t\t  \t}\n\t\t} else { return }\n\t}\n\n\tshuffle = (array) => {\n\t  \tvar currentIndex = array.length, temporaryValue, randomIndex;\n\t\n\t  \twhile (0 !== currentIndex) {\n\t  \t  randomIndex = Math.floor(Math.random() * currentIndex);\n\t  \t  currentIndex -= 1;\n\t\n\t  \t  temporaryValue = array[currentIndex];\n\t  \t  array[currentIndex] = array[randomIndex];\n\t  \t  array[randomIndex] = temporaryValue;\n\t  \t}\n\t  \treturn array;\n\t}\n\n\n\tcheckAnswer = (answer) => {\n\t\tconst { gameList, answerComplete, progress } = this.state;\n\t\tif (!answerComplete) {\n\t\t\tconst correctAnswer = gameList.head.value.answer;\n\t\t\tthis.setState({\n\t\t\t\tanswer,\n\t\t\t\tanswerComplete: true\n\t\t\t})\n\t\t\tif (correctAnswer === answer) {\n\t\t\t\tconst { entry_id } = gameList.head.value;\n\t\t\t\tlet i = progress.length;\n\n\t\t\t\tfunction addToProgress() {\n\t\t\t\t\tprogress.push({\n\t\t\t\t\t\tentry_id,\n\t\t\t\t\t\tprogress: 1\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\taddToProgress()\n\t\t\t\t} else {\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (entry_id === progress[i].entry_id) {\n\t\t\t\t\t\t\tprogress[i].progress += 1\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t\t\taddToProgress()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tprogress,\n\t\t\t\t\tcorrectCount: this.state.correctCount + 1,\n\t\t\t\t\tcorrectOption: answer\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// wrong\n\t\t\t\tthis.setState({\n\t\t\t\t\tcorrectOption: correctAnswer,\n\t\t\t\t\twrongOption: answer,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tnext = () => {\n\t\tconst { gameList, gameList: { head } } = this.state;\n\t\tif (head) {\n\t\t\tthis.setState({\n\t\t\t\tgameList,\n\t\t\t\tanswerComplete: false,\n\t\t\t\tcorrectOption: '',\n\t\t\t\twrongOption: '',\n\t\t\t})\n\t\t\tgameList.removeFromHead();\n\t\t} else {\n\t\t\tconst { setLoading, updateURL, search, user: { userID } } = this.props;\n\t\t\tconst { DECK } = routes;\n\n\t\t\tif (Boolean(userID)) {\n\t\t\t\tconst { progress } = this.state;\n\t\t\t\tsetLoading(true)\n\t\t\t\tapiRequest({\n\t\t\t\t\tendPoint: '/update-progress',\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tuser_id: userID,\n\t\t\t\t\t\tentries: progress\n\t\t\t\t\t} \n\t\t\t\t})\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\tif (data && data.error != null) {\n\t\t\t\t\t\t\tconst { title, message } = data.error;\n\t\t\t\t\t\t\toptionAlert({\n\t\t\t\t\t\t\t    title,\n\t\t\t\t\t\t\t    message\n\t\t\t\t\t\t    })\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log('Progress Updated')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tupdateURL(`${DECK}${search}`)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err=>{\n\t\t\t\t\t\tconsole.log(err)\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tupdateURL(`${DECK}${search}`)\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { gameList, gameList: { head }, answerComplete, correctOption, wrongOption, answer, listLength, correctCount } = this.state;\n\t\tconst { deck_name } = this.props.deck;\n\t\t\n\t\treturn (\n\t\t\t<div className='learn-game'>\n\t\t\t\t{head &&\n\t\t\t\t\t<div className='game-container'>\n\t\t\t\t\t\t<div className='question-container centered'>\n\t\t\t\t\t\t\t<div className='question-card centered'>\n\t\t\t\t\t\t\t\t{isNaN(head.value.question)\n\t\t\t\t\t\t\t\t\t?\t<h1>{head.value.question || ''}</h1>\n\t\t\t\t\t\t\t\t\t: \t<SpeakerButton \n\t\t\t\t\t\t\t\t\t\t\tsize='55'\n\t\t\t\t\t\t\t\t\t\t\tentryID={head.value.question} \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='option-container'>\n\t\t\t\t\t\t\t{head.value.options.map(option => {\n\t\t\t\t\t\t\t\tconst correctChoice = (option === correctOption && option === answer);\n\n\t\t\t\t\t\t\t\tconst color = option === correctOption \n\t\t\t\t\t\t\t\t\t? 'var(--cantoPink)'\n\t\t\t\t\t\t\t\t\t: 'var(--cantoGray)'\n\t\t\t\t\t\t\t\tconst disable = answerComplete ? null : 'default-border'\n\t\t\t\t\t\t\t\tconst style = {\n\t\t\t\t\t\t\t\t\tbackground: answerComplete \n\t\t\t\t\t\t\t\t\t\t? color \n\t\t\t\t\t\t\t\t\t\t: null \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t\t\t\t\tclassName={`option-box centered ${disable}`}\n\t\t\t\t\t\t\t\t\t\tonClick={()=>this.checkAnswer(option)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p>{option}</p>\n\t\t\t\t\t\t\t\t\t\t{correctChoice &&\n\t\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{background: 'var(--cantoBlue'}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='icon-stamp centered'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='like'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='cantoWhite' \n\t\t\t\t\t\t\t\t\t\t\t\t\ticonSize='54'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{option === wrongOption &&\n\t\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{background: 'var(--cantoPink'}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='icon-stamp centered'\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon \n\t\t\t\t\t\t\t\t\t\t\t\t\ticon='dislike'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='cantoWhite' \n\t\t\t\t\t\t\t\t\t\t\t\t\ticonSize='54'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{!head &&\n\t\t\t\t\t<div className='end-message'>\n\t\t\t\t\t\t<h1>{`${deck_name} Deck`}</h1>\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t{`You got ${correctCount} correct out of ${listLength}.`}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<div className='bottom-btns'>\n\t\t\t\t\t<h3 className='push-left'>\n\t\t\t\t\t\t{`${deck_name} Deck`}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className='button-label'>\n\t\t\t\t\t\t{!head\n\t\t\t\t\t\t\t?\t'Complete'\n\t\t\t\t\t\t\t: \t`${listLength - gameList.length + 1} / ${listLength}`\n\t\t\t\t\t\t}\n\t\t\t\t\t</p>\n\t\t\t\t\t<Button \n\t\t\t\t\t\ttitle={answerComplete || !head ? 'Next' : 'Skip'}\n\t\t\t\t\t\tbuttonType='ghost'\n\t\t\t\t\t\tcolor='var(--cantoWhite)'\n\t\t\t\t\t\tmargin='10px'\n\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\thandleClick={()=>this.next()}\n\t\t\t\t\t/>\n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LearnGame);"]},"metadata":{},"sourceType":"module"}