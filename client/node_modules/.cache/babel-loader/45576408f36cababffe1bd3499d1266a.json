{"ast":null,"code":"import _objectSpread from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/new-deck/new-deck.component.js\";\nimport React, { Component } from 'react';\nimport './new-deck.styles.css';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport MediaQuery from 'react-responsive';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport EntryRow from '../../components/entry-row/entry-row.component';\nimport TextInput from '../../components/text-input/text-input.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport apiRequest from '../../helpers/apiRequest';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport Button from '../../components/button/button.component';\nimport { routes } from '../../redux/routing/routing.constants';\nimport { setLoading as _setLoading } from '../../redux/loading/loading.actions';\nimport { setPrevRoute as _setPrevRoute } from '../../redux/routing/routing.actions';\nimport { updateObject, connectionError, isEmptyObject } from '../../helpers/helpers';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.user.user,\n    searchKey: state.temp.searchKey,\n    searchType: state.temp.searchType,\n    pathName: state.router.location.pathname,\n    hash: state.router.location.hash,\n    search: state.router.location.search,\n    deck: state.deck.deck,\n    deckEntries: state.deck.deckEntries\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateURL: function updateURL(searchKey) {\n      return dispatch(push(searchKey));\n    },\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    },\n    presentAlert: function presentAlert(alert) {\n      return dispatch(setAlert(alert));\n    },\n    setPrevRoute: function setPrevRoute(prevRoute) {\n      return dispatch(_setPrevRoute(prevRoute));\n    }\n  };\n};\n\nvar NewDeck =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewDeck, _Component);\n\n  function NewDeck(props) {\n    var _this;\n\n    _classCallCheck(this, NewDeck);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewDeck).call(this, props));\n\n    _this.setDeckToEdit = function (deck) {\n      var deckEntries = _this.props.deckEntries;\n      var deck_id = deck.deck_id,\n          deck_name = deck.deck_name,\n          is_public = deck.is_public,\n          tags = deck.tags,\n          description = deck.description,\n          user_id = deck.user_id;\n      var newDeck = {\n        deck_id: deck_id,\n        deckName: deck_name,\n        isPublic: is_public === '0' ? false : true,\n        isOfficial: user_id === 0 ? true : false,\n        tags: tags || '',\n        description: description || ''\n      };\n\n      _this.setState({\n        isEditing: true,\n        entryList: deckEntries,\n        deck: newDeck\n      });\n    };\n\n    _this.searchEntries = function (searchKey) {\n      var _this$props = _this.props,\n          setLoading = _this$props.setLoading,\n          searchType = _this$props.searchType;\n      setLoading(true);\n      apiRequest({\n        endPoint: '/search',\n        method: 'POST',\n        body: {\n          searchKey: searchKey,\n          searchType: searchType\n        }\n      }).then(function (data) {\n        if (Array.isArray(data)) {\n          _this.setState({\n            entries: data\n          });\n        } else {\n          _this.setState({\n            entries: []\n          });\n        }\n\n        _this.setState({\n          searchComplete: true\n        });\n\n        setLoading(false);\n      }).catch(function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var deck = _objectSpread({}, _this.state.deck);\n\n      var newDeck = updateObject(event, deck);\n\n      _this.setState({\n        deck: newDeck\n      });\n    };\n\n    _this.handlePublic = function (event) {\n      var deck = _objectSpread({}, _this.state.deck);\n\n      deck[event.target.id] = !deck[event.target.id];\n\n      _this.setState({\n        deck: deck\n      });\n    };\n\n    _this.notEnoughMessage = function () {\n      optionAlert({\n        title: 'Not Enough Entries',\n        message: 'You must have at least 5 entries added to your deck before proceeding!'\n      });\n    };\n\n    _this.next = function () {\n      var _this$props2 = _this.props,\n          updateURL = _this$props2.updateURL,\n          presentAlert = _this$props2.presentAlert,\n          setLoading = _this$props2.setLoading,\n          pathName = _this$props2.pathName,\n          search = _this$props2.search,\n          userID = _this$props2.user.userID;\n      var _this$state = _this.state,\n          step = _this$state.step,\n          entryList = _this$state.entryList,\n          _this$state$deck = _this$state.deck,\n          deck_id = _this$state$deck.deck_id,\n          deckName = _this$state$deck.deckName,\n          isPublic = _this$state$deck.isPublic,\n          isOfficial = _this$state$deck.isOfficial,\n          tags = _this$state$deck.tags,\n          description = _this$state$deck.description;\n      var LEARN = routes.LEARN;\n\n      if (step <= 1 && deckName) {\n        if (step === 1 && entryList.length < 5) {\n          _this.notEnoughMessage();\n        } else {\n          step += 1;\n          updateURL(\"\".concat(pathName).concat(search, \"#\").concat(step));\n        }\n      } else if (step === 2) {\n        if (entryList.length < 5) {\n          _this.notEnoughMessage();\n        } else {\n          setLoading(true);\n          var entry_ids = entryList.map(function (entry) {\n            return entry.entry_id;\n          });\n          apiRequest({\n            endPoint: '/new-deck',\n            method: 'POST',\n            body: {\n              deck_id: deck_id,\n              deck_name: deckName,\n              user_id: userID,\n              is_public: isPublic ? '1' : '0',\n              is_official: isOfficial,\n              tags: tags,\n              description: description,\n              entry_ids: entry_ids\n            }\n          }).then(function (data) {\n            if (data && data.error != null) {\n              var _data$error = data.error,\n                  title = _data$error.title,\n                  message = _data$error.message;\n              optionAlert({\n                title: title,\n                message: message\n              });\n            } else {\n              var _title, _message;\n\n              if (deck_id) {\n                _title = 'Deck Updated';\n                _message = \"Your deck, \\\"\".concat(deckName, \"\\\", has been updated!\");\n              } else {\n                _title = 'Deck Created';\n                _message = \"Your new deck, \\\"\".concat(deckName, \"\\\", has been created!\");\n              }\n\n              var alert = {\n                title: _title,\n                message: _message,\n                showAlert: true\n              };\n              presentAlert(alert);\n              updateURL(LEARN);\n            }\n\n            setLoading(false);\n          }).catch(function (err) {\n            setLoading(false);\n            connectionError();\n          });\n        }\n      }\n    };\n\n    _this.back = function () {\n      var _this$props3 = _this.props,\n          updateURL = _this$props3.updateURL,\n          pathName = _this$props3.pathName,\n          search = _this$props3.search;\n      var step = _this.state.step;\n      step -= 1;\n      updateURL(\"\".concat(pathName).concat(search, \"#\").concat(step));\n    };\n\n    _this.handleEntrySelect = function (entry) {\n      var entryList = _this.state.entryList;\n      var i = entryList.length;\n\n      var addEntry = function addEntry(list, entryToAdd) {\n        list.push(entryToAdd);\n\n        _this.setState({\n          list: list\n        });\n\n        _this.popNumber();\n      };\n\n      if (i < 1) {\n        addEntry(entryList, entry);\n      } else {\n        while (i--) {\n          if (entryList[i].entry_id === entry.entry_id) {\n            entryList.splice(i, 1);\n\n            _this.setState({\n              entryList: entryList\n            });\n\n            _this.popNumber();\n\n            return;\n          }\n        }\n\n        addEntry(entryList, entry);\n      }\n    };\n\n    _this.popNumber = function () {\n      _this.setState({\n        pop: true\n      });\n\n      setTimeout(function () {\n        return _this.setState({\n          pop: false\n        });\n      }, 500);\n    };\n\n    _this.renderNewDeckForm = function () {\n      var userEmail = _this.props.user.userEmail;\n      var isEditing = _this.state.isEditing;\n      var _this$state$deck2 = _this.state.deck,\n          deckName = _this$state$deck2.deckName,\n          tags = _this$state$deck2.tags,\n          isPublic = _this$state$deck2.isPublic,\n          description = _this$state$deck2.description,\n          isOfficial = _this$state$deck2.isOfficial;\n      var message = isEditing ? 'Edit Deck Details' : 'New Deck Details';\n      return React.createElement(MediaQuery, {\n        maxWidth: 699,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, function (matches) {\n        return React.createElement(\"div\", {\n          className: \"inner-new-entry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, matches ? React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, message) : React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, message), React.createElement(TextInput, {\n          placeHolder: \"Name of Deck\",\n          margin: \"20px 0\",\n          height: \"44px\",\n          id: \"deckName\",\n          value: deckName,\n          handleChange: _this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }), React.createElement(TextInput, {\n          placeHolder: \"Tags (optional)\",\n          margin: \"20px 0\",\n          height: \"44px\",\n          id: \"tags\",\n          value: tags,\n          handleChange: _this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }), React.createElement(TextInput, {\n          isTextArea: true,\n          placeHolder: \"Description (optional)\",\n          margin: \"20px 0\",\n          height: \"100px\",\n          id: \"description\",\n          value: description,\n          handleChange: _this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"agree-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"button-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, \"Make Public\"), React.createElement(\"input\", {\n          className: \"checkbox\",\n          id: \"isPublic\",\n          type: \"checkbox\",\n          onChange: _this.handlePublic,\n          checked: isPublic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"checkbox-label\",\n          htmlFor: \"isPublic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        })), userEmail === 'brimac1634@gmail.com' && React.createElement(\"div\", {\n          className: \"agree-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"button-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, \"CantoTalk Official\"), React.createElement(\"input\", {\n          className: \"checkbox\",\n          id: \"isOfficial\",\n          type: \"checkbox\",\n          onChange: _this.handlePublic,\n          checked: isOfficial,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"checkbox-label\",\n          htmlFor: \"isOfficial\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        })));\n      });\n    };\n\n    _this.state = {\n      entries: [],\n      step: 0,\n      pop: false,\n      searchComplete: false,\n      isEditing: false,\n      deck: {\n        deck_id: '',\n        deckName: '',\n        isPublic: false,\n        isOfficial: false,\n        tags: '',\n        description: ''\n      },\n      entryList: []\n    };\n    return _this;\n  }\n\n  _createClass(NewDeck, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          pathName = _this$props4.pathName,\n          hash = _this$props4.hash,\n          updateURL = _this$props4.updateURL,\n          user = _this$props4.user,\n          deck = _this$props4.deck,\n          search = _this$props4.search;\n      var LOGIN = routes.LOGIN,\n          EDIT_DECK = routes.EDIT_DECK,\n          LEARN = routes.LEARN,\n          DECK = routes.DECK;\n\n      if (isEmptyObject(user)) {\n        if (search) {\n          _setPrevRoute(\"\".concat(pathName).concat(search).concat(hash));\n        } else {\n          _setPrevRoute(\"\".concat(pathName).concat(hash));\n        }\n\n        updateURL(LOGIN);\n      } else if (pathName === EDIT_DECK) {\n        if (!isEmptyObject(deck)) {\n          this.setDeckToEdit(deck);\n        } else {\n          if (search) {\n            updateURL(\"\".concat(DECK).concat(search));\n          } else {\n            updateURL(LEARN);\n          }\n        }\n      }\n\n      if (hash && hash !== '#0') {\n        updateURL(\"\".concat(pathName, \"#0\"));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props5 = this.props,\n          searchKey = _this$props5.searchKey,\n          hash = _this$props5.hash;\n\n      if (prevProps.hash !== hash) {\n        this.setState({\n          step: Number(hash.slice(1, hash.length))\n        });\n      }\n\n      if (prevProps.searchKey !== searchKey) {\n        this.searchEntries(searchKey);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          isEditing = _this$state2.isEditing,\n          entries = _this$state2.entries,\n          step = _this$state2.step,\n          searchComplete = _this$state2.searchComplete,\n          pop = _this$state2.pop,\n          entryList = _this$state2.entryList,\n          deckName = _this$state2.deck.deckName;\n      var translate = step * -100;\n      var popClass = pop ? 'pop' : null;\n      var addedList;\n\n      if (entryList) {\n        addedList = entryList.map(function (entry) {\n          return entry.entry_id;\n        });\n      }\n\n      var buttonMessage;\n      var title;\n      var title2;\n\n      switch (step) {\n        case 0:\n          buttonMessage = isEditing ? 'Next: Edit Entries' : 'Next: Add Entries';\n          break;\n\n        case 1:\n          title = isEditing ? 'Need to edit your deck?' : 'Add to your new deck!';\n          title2 = 'Entries added';\n          break;\n\n        case 2:\n          buttonMessage = isEditing ? \"Update Deck: \\\"\".concat(deckName, \"\\\"\") : \"Create Deck: \\\"\".concat(deckName, \"\\\"\");\n          title = isEditing ? 'Review the updated entries' : 'Review your new deck!';\n          break;\n\n        default:\n          buttonMessage = '';\n      }\n\n      return React.createElement(MediaQuery, {\n        maxWidth: 699,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, function (matches) {\n        return React.createElement(\"div\", {\n          className: \"page new-deck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"slide over-flow\",\n          style: {\n            left: 0,\n            transform: \"translateX(\".concat(translate, \"%)\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, _this2.renderNewDeckForm()), React.createElement(\"div\", {\n          className: \"slide over-flow\",\n          style: {\n            left: '100%',\n            transform: \"translateX(\".concat(translate, \"%)\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"new-list-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, matches ? React.createElement(\"div\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, title)) : React.createElement(\"h2\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, title), React.createElement(\"div\", {\n          className: \"list-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, step === 1 && React.createElement(EntriesList, {\n          entries: entries,\n          selectEntry: _this2.handleEntrySelect,\n          searchComplete: searchComplete,\n          addedList: addedList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"search-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        })))), !matches && React.createElement(\"div\", {\n          className: \"new-list-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, matches ? React.createElement(\"div\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }, title2)) : React.createElement(\"h2\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, title2), React.createElement(\"div\", {\n          className: \"list-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, entryList.map(function (entry) {\n          return React.createElement(EntryRow, {\n            key: entry.entry_id,\n            handleX: _this2.handleEntrySelect,\n            entry: entry,\n            showX: true,\n            isDisabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442\n            },\n            __self: this\n          });\n        }))))), React.createElement(\"div\", {\n          className: \"slide over-flow last-slide\",\n          style: {\n            left: '200%',\n            transform: \"translateX(\".concat(translate, \"%)\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }, step === 2 && React.createElement(\"div\", {\n          className: \"list-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"new-list-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-search-no-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, entryList.map(function (entry) {\n          return React.createElement(EntryRow, {\n            key: entry.entry_id,\n            handleX: _this2.handleEntrySelect,\n            entry: entry,\n            showX: true,\n            isDisabled: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 463\n            },\n            __self: this\n          });\n        })))), matches ? React.createElement(\"div\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478\n          },\n          __self: this\n        }, title)) : React.createElement(\"h2\", {\n          className: \"slide-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }, title)), React.createElement(\"div\", {\n          className: \"bottom-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          },\n          __self: this\n        }, step > 0 && React.createElement(\"div\", {\n          className: \"back-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }, React.createElement(Button, {\n          title: \"Back\",\n          buttonType: \"ghost\",\n          color: \"var(--cantoWhite)\",\n          height: \"44px\",\n          width: matches ? '65px' : '100px',\n          margin: matches ? '5px 0' : '20px 0',\n          handleClick: function handleClick() {\n            return _this2.back();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486\n          },\n          __self: this\n        })), step === 1 ? React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, \"Next: Confirm\", \" \"), React.createElement(\"p\", {\n          className: \"left-marg \".concat(popClass),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }, entryList.length), React.createElement(\"p\", {\n          className: \"button-label left-marg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          },\n          __self: this\n        }, \" \", \"Entries\")) : React.createElement(\"p\", {\n          className: \"button-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, buttonMessage), React.createElement(Button, {\n          title: step === 2 ? 'Confirm' : 'Next',\n          buttonType: \"ghost\",\n          color: \"var(--cantoWhite)\",\n          height: \"44px\",\n          isDisabled: !deckName,\n          width: matches ? '65px' : '100px',\n          margin: matches ? '5px 0' : '20px 0',\n          handleClick: function handleClick() {\n            return _this2.next();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return NewDeck;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDeck);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/new-deck/new-deck.component.js"],"names":["React","Component","connect","push","MediaQuery","optionAlert","EntryRow","TextInput","EntriesList","apiRequest","SearchBar","Button","routes","setLoading","setPrevRoute","updateObject","connectionError","isEmptyObject","setAlert","mapStateToProps","state","ownProps","user","searchKey","temp","searchType","pathName","router","location","pathname","hash","search","deck","deckEntries","mapDispatchToProps","dispatch","updateURL","loading","presentAlert","alert","prevRoute","NewDeck","props","setDeckToEdit","deck_id","deck_name","is_public","tags","description","user_id","newDeck","deckName","isPublic","isOfficial","setState","isEditing","entryList","searchEntries","endPoint","method","body","then","data","Array","isArray","entries","searchComplete","catch","err","console","log","handleChange","event","handlePublic","target","id","notEnoughMessage","title","message","next","userID","step","LEARN","length","entry_ids","map","entry","entry_id","is_official","error","showAlert","back","handleEntrySelect","i","addEntry","list","entryToAdd","popNumber","splice","pop","setTimeout","renderNewDeckForm","userEmail","matches","LOGIN","EDIT_DECK","DECK","prevProps","Number","slice","translate","popClass","addedList","buttonMessage","title2","left","transform"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,sDAA5B;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,MAAT,QAAuB,uCAAvB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,qCAA3B;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,qCAA7B;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,aAAxC,QAA6D,uBAA7D;AACA,SAASC,QAAT,QAAyB,+CAAzB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACNC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWA,IADX;AAENC,IAAAA,SAAS,EAAEH,KAAK,CAACI,IAAN,CAAWD,SAFhB;AAGNE,IAAAA,UAAU,EAAEL,KAAK,CAACI,IAAN,CAAWC,UAHjB;AAINC,IAAAA,QAAQ,EAAEN,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBC,QAJ1B;AAKLC,IAAAA,IAAI,EAAEV,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBE,IALvB;AAMLC,IAAAA,MAAM,EAAEX,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBG,MANzB;AAOLC,IAAAA,IAAI,EAAEZ,KAAK,CAACY,IAAN,CAAWA,IAPZ;AAQLC,IAAAA,WAAW,EAAEb,KAAK,CAACY,IAAN,CAAWC;AARnB,GAAP;AAUD,CAXD;;AAaA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNC,IAAAA,SAAS,EAAE,mBAACb,SAAD;AAAA,aAAeY,QAAQ,CAAChC,IAAI,CAACoB,SAAD,CAAL,CAAvB;AAAA,KADL;AAENV,IAAAA,UAAU,EAAE,oBAACwB,OAAD;AAAA,aAAaF,QAAQ,CAACtB,WAAU,CAACwB,OAAD,CAAX,CAArB;AAAA,KAFN;AAGNC,IAAAA,YAAY,EAAE,sBAACC,KAAD;AAAA,aAAWJ,QAAQ,CAACjB,QAAQ,CAACqB,KAAD,CAAT,CAAnB;AAAA,KAHR;AAINzB,IAAAA,YAAY,EAAE,sBAAC0B,SAAD;AAAA,aAAeL,QAAQ,CAACrB,aAAY,CAAC0B,SAAD,CAAb,CAAvB;AAAA;AAJR,GAAP;AAMA,CAPD;;IASMC,O;;;;;AACL,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;;AADkB,UA0DnBC,aA1DmB,GA0DH,UAACX,IAAD,EAAU;AAAA,UACjBC,WADiB,GACD,MAAKS,KADJ,CACjBT,WADiB;AAAA,UAGxBW,OAHwB,GASrBZ,IATqB,CAGxBY,OAHwB;AAAA,UAIxBC,SAJwB,GASrBb,IATqB,CAIxBa,SAJwB;AAAA,UAKxBC,SALwB,GASrBd,IATqB,CAKxBc,SALwB;AAAA,UAMxBC,IANwB,GASrBf,IATqB,CAMxBe,IANwB;AAAA,UAOxBC,WAPwB,GASrBhB,IATqB,CAOxBgB,WAPwB;AAAA,UAQxBC,OARwB,GASrBjB,IATqB,CAQxBiB,OARwB;AAWzB,UAAMC,OAAO,GAAG;AACfN,QAAAA,OAAO,EAAPA,OADe;AAEfO,QAAAA,QAAQ,EAAEN,SAFK;AAGfO,QAAAA,QAAQ,EAAEN,SAAS,KAAK,GAAd,GAAoB,KAApB,GAA4B,IAHvB;AAIfO,QAAAA,UAAU,EAAEJ,OAAO,KAAK,CAAZ,GAAgB,IAAhB,GAAuB,KAJpB;AAKfF,QAAAA,IAAI,EAAEA,IAAI,IAAI,EALC;AAMfC,QAAAA,WAAW,EAAEA,WAAW,IAAI;AANb,OAAhB;;AAQA,YAAKM,QAAL,CAAc;AACbC,QAAAA,SAAS,EAAE,IADE;AAEbC,QAAAA,SAAS,EAAEvB,WAFE;AAGbD,QAAAA,IAAI,EAAEkB;AAHO,OAAd;AAKA,KAlFkB;;AAAA,UAoFnBO,aApFmB,GAoFH,UAAClC,SAAD,EAAe;AAAA,wBACK,MAAKmB,KADV;AAAA,UACtB7B,UADsB,eACtBA,UADsB;AAAA,UACVY,UADU,eACVA,UADU;AAE9BZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,MAAAA,UAAU,CAAC;AACViD,QAAAA,QAAQ,EAAE,SADA;AAEVC,QAAAA,MAAM,EAAE,MAFE;AAGVC,QAAAA,IAAI,EAAE;AAACrC,UAAAA,SAAS,EAATA,SAAD;AAAYE,UAAAA,UAAU,EAAVA;AAAZ;AAHI,OAAD,CAAV,CAKEoC,IALF,CAKO,UAAAC,IAAI,EAAI;AACb,YAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACxB,gBAAKR,QAAL,CAAc;AACbW,YAAAA,OAAO,EAAEH;AADI,WAAd;AAGA,SAJD,MAIO;AACN,gBAAKR,QAAL,CAAc;AACbW,YAAAA,OAAO,EAAE;AADI,WAAd;AAGA;;AACD,cAAKX,QAAL,CAAc;AAACY,UAAAA,cAAc,EAAE;AAAjB,SAAd;;AACArD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,OAjBF,EAkBEsD,KAlBF,CAkBQ,UAAAC,GAAG,EAAE;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAvD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,OArBF;AAsBA,KA7GkB;;AAAA,UA+GnB0D,YA/GmB,GA+GJ,UAACC,KAAD,EAAW;AACzB,UAAMxC,IAAI,qBAAQ,MAAKZ,KAAL,CAAWY,IAAnB,CAAV;;AACG,UAAMkB,OAAO,GAAGnC,YAAY,CAACyD,KAAD,EAAQxC,IAAR,CAA5B;;AACA,YAAKsB,QAAL,CAAc;AAACtB,QAAAA,IAAI,EAAEkB;AAAP,OAAd;AACH,KAnHkB;;AAAA,UAqHnBuB,YArHmB,GAqHJ,UAACD,KAAD,EAAW;AACzB,UAAMxC,IAAI,qBAAQ,MAAKZ,KAAL,CAAWY,IAAnB,CAAV;;AACAA,MAAAA,IAAI,CAACwC,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAJ,GAAwB,CAAC3C,IAAI,CAACwC,KAAK,CAACE,MAAN,CAAaC,EAAd,CAA7B;;AACA,YAAKrB,QAAL,CAAc;AAACtB,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACA,KAzHkB;;AAAA,UA2HnB4C,gBA3HmB,GA2HA,YAAM;AACxBvE,MAAAA,WAAW,CAAC;AACRwE,QAAAA,KAAK,EAAE,oBADC;AAERC,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAX;AAIA,KAhIkB;;AAAA,UAkInBC,IAlImB,GAkIZ,YAAM;AAAA,yBAUR,MAAKrC,KAVG;AAAA,UAEXN,SAFW,gBAEXA,SAFW;AAAA,UAGXE,YAHW,gBAGXA,YAHW;AAAA,UAIXzB,UAJW,gBAIXA,UAJW;AAAA,UAKXa,QALW,gBAKXA,QALW;AAAA,UAMXK,MANW,gBAMXA,MANW;AAAA,UAQViD,MARU,gBAOX1D,IAPW,CAQV0D,MARU;AAAA,wBAuBR,MAAK5D,KAvBG;AAAA,UAaX6D,IAbW,eAaXA,IAbW;AAAA,UAcXzB,SAdW,eAcXA,SAdW;AAAA,yCAeXxB,IAfW;AAAA,UAgBVY,OAhBU,oBAgBVA,OAhBU;AAAA,UAiBVO,QAjBU,oBAiBVA,QAjBU;AAAA,UAkBVC,QAlBU,oBAkBVA,QAlBU;AAAA,UAmBVC,UAnBU,oBAmBVA,UAnBU;AAAA,UAoBVN,IApBU,oBAoBVA,IApBU;AAAA,UAqBVC,WArBU,oBAqBVA,WArBU;AAAA,UAwBJkC,KAxBI,GAwBMtE,MAxBN,CAwBJsE,KAxBI;;AA0BZ,UAAID,IAAI,IAAI,CAAR,IAAa9B,QAAjB,EAA2B;AAC1B,YAAI8B,IAAI,KAAK,CAAT,IAAczB,SAAS,CAAC2B,MAAV,GAAmB,CAArC,EAAwC;AACvC,gBAAKP,gBAAL;AACA,SAFD,MAEO;AACNK,UAAAA,IAAI,IAAI,CAAR;AACA7C,UAAAA,SAAS,WAAIV,QAAJ,SAAeK,MAAf,cAAyBkD,IAAzB,EAAT;AACA;AACD,OAPD,MAOO,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACtB,YAAIzB,SAAS,CAAC2B,MAAV,GAAmB,CAAvB,EAA0B;AACzB,gBAAKP,gBAAL;AACA,SAFD,MAEO;AACN/D,UAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAIuE,SAAS,GAAG5B,SAAS,CAAC6B,GAAV,CAAc,UAAAC,KAAK;AAAA,mBAAIA,KAAK,CAACC,QAAV;AAAA,WAAnB,CAAhB;AACA9E,UAAAA,UAAU,CAAC;AACViD,YAAAA,QAAQ,EAAE,WADA;AAEVC,YAAAA,MAAM,EAAE,MAFE;AAGVC,YAAAA,IAAI,EAAE;AACLhB,cAAAA,OAAO,EAAPA,OADK;AAELC,cAAAA,SAAS,EAAEM,QAFN;AAGLF,cAAAA,OAAO,EAAE+B,MAHJ;AAILlC,cAAAA,SAAS,EAAEM,QAAQ,GAAG,GAAH,GAAS,GAJvB;AAKLoC,cAAAA,WAAW,EAAEnC,UALR;AAMLN,cAAAA,IAAI,EAAJA,IANK;AAOLC,cAAAA,WAAW,EAAXA,WAPK;AAQLoC,cAAAA,SAAS,EAATA;AARK;AAHI,WAAD,CAAV,CAcEvB,IAdF,CAcO,UAAAC,IAAI,EAAI;AACb,gBAAIA,IAAI,IAAIA,IAAI,CAAC2B,KAAL,IAAc,IAA1B,EAAgC;AAAA,gCACJ3B,IAAI,CAAC2B,KADD;AAAA,kBACvBZ,KADuB,eACvBA,KADuB;AAAA,kBAChBC,OADgB,eAChBA,OADgB;AAE/BzE,cAAAA,WAAW,CAAC;AACRwE,gBAAAA,KAAK,EAALA,KADQ;AAERC,gBAAAA,OAAO,EAAPA;AAFQ,eAAD,CAAX;AAIA,aAND,MAMO;AACN,kBAAID,MAAJ,EAAWC,QAAX;;AACA,kBAAIlC,OAAJ,EAAa;AACZiC,gBAAAA,MAAK,GAAG,cAAR;AACAC,gBAAAA,QAAO,0BAAkB3B,QAAlB,0BAAP;AACA,eAHD,MAGO;AACN0B,gBAAAA,MAAK,GAAG,cAAR;AACAC,gBAAAA,QAAO,8BAAsB3B,QAAtB,0BAAP;AACA;;AACD,kBAAMZ,KAAK,GAAG;AACPsC,gBAAAA,KAAK,EAALA,MADO;AAEPC,gBAAAA,OAAO,EAAPA,QAFO;AAGPY,gBAAAA,SAAS,EAAE;AAHJ,eAAd;AAKGpD,cAAAA,YAAY,CAACC,KAAD,CAAZ;AACAH,cAAAA,SAAS,CAAC8C,KAAD,CAAT;AACH;;AACDrE,YAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAvCF,EAwCEsD,KAxCF,CAwCQ,UAAAC,GAAG,EAAE;AACXvD,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,YAAAA,eAAe;AACf,WA3CF;AA4CA;AACD;AACD,KAvNkB;;AAAA,UAyNnB2E,IAzNmB,GAyNZ,YAAM;AAAA,yBAC4B,MAAKjD,KADjC;AAAA,UACJN,SADI,gBACJA,SADI;AAAA,UACOV,QADP,gBACOA,QADP;AAAA,UACiBK,MADjB,gBACiBA,MADjB;AAAA,UAENkD,IAFM,GAEG,MAAK7D,KAFR,CAEN6D,IAFM;AAGZA,MAAAA,IAAI,IAAI,CAAR;AACA7C,MAAAA,SAAS,WAAIV,QAAJ,SAAeK,MAAf,cAAyBkD,IAAzB,EAAT;AACA,KA9NkB;;AAAA,UAgOnBW,iBAhOmB,GAgOC,UAACN,KAAD,EAAW;AAAA,UACtB9B,SADsB,GACR,MAAKpC,KADG,CACtBoC,SADsB;AAE9B,UAAIqC,CAAC,GAAGrC,SAAS,CAAC2B,MAAlB;;AAEA,UAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,UAAP,EAAsB;AACtCD,QAAAA,IAAI,CAAC5F,IAAL,CAAU6F,UAAV;;AACA,cAAK1C,QAAL,CAAc;AAACyC,UAAAA,IAAI,EAAJA;AAAD,SAAd;;AACA,cAAKE,SAAL;AACA,OAJD;;AAMA,UAAIJ,CAAC,GAAG,CAAR,EAAW;AACVC,QAAAA,QAAQ,CAACtC,SAAD,EAAY8B,KAAZ,CAAR;AACA,OAFD,MAEO;AACN,eAAOO,CAAC,EAAR,EAAY;AACX,cAAIrC,SAAS,CAACqC,CAAD,CAAT,CAAaN,QAAb,KAA0BD,KAAK,CAACC,QAApC,EAA8C;AAC7C/B,YAAAA,SAAS,CAAC0C,MAAV,CAAiBL,CAAjB,EAAoB,CAApB;;AACA,kBAAKvC,QAAL,CAAc;AAACE,cAAAA,SAAS,EAATA;AAAD,aAAd;;AACA,kBAAKyC,SAAL;;AACA;AACA;AACD;;AACDH,QAAAA,QAAQ,CAACtC,SAAD,EAAY8B,KAAZ,CAAR;AACA;AACD,KAvPkB;;AAAA,UAyPnBW,SAzPmB,GAyPP,YAAM;AACjB,YAAK3C,QAAL,CAAc;AAAC6C,QAAAA,GAAG,EAAE;AAAN,OAAd;;AACAC,MAAAA,UAAU,CAAC;AAAA,eAAI,MAAK9C,QAAL,CAAc;AAAC6C,UAAAA,GAAG,EAAE;AAAN,SAAd,CAAJ;AAAA,OAAD,EAAkC,GAAlC,CAAV;AACA,KA5PkB;;AAAA,UA8PnBE,iBA9PmB,GA8PC,YAAM;AAAA,UACTC,SADS,GACO,MAAK5D,KADZ,CACjBpB,IADiB,CACTgF,SADS;AAAA,UAEjB/C,SAFiB,GAEH,MAAKnC,KAFF,CAEjBmC,SAFiB;AAAA,8BAGqC,MAAKnC,KAAL,CAAWY,IAHhD;AAAA,UAGjBmB,QAHiB,qBAGjBA,QAHiB;AAAA,UAGPJ,IAHO,qBAGPA,IAHO;AAAA,UAGDK,QAHC,qBAGDA,QAHC;AAAA,UAGSJ,WAHT,qBAGSA,WAHT;AAAA,UAGsBK,UAHtB,qBAGsBA,UAHtB;AAIzB,UAAMyB,OAAO,GAAGvB,SAAS,GAAG,mBAAH,GAAyB,kBAAlD;AACA,aACC,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,UAACgD,OAAD,EAAa;AACb,eACC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKzB,OAAL,CADK,GAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,OAAL,CAHJ,EAKC,oBAAC,SAAD;AACC,UAAA,WAAW,EAAC,cADb;AAEC,UAAA,MAAM,EAAC,QAFR;AAGC,UAAA,MAAM,EAAC,MAHR;AAIC,UAAA,EAAE,EAAC,UAJJ;AAKC,UAAA,KAAK,EAAE3B,QALR;AAMC,UAAA,YAAY,EAAE,MAAKoB,YANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALD,EAaC,oBAAC,SAAD;AACC,UAAA,WAAW,EAAC,iBADb;AAEC,UAAA,MAAM,EAAC,QAFR;AAGC,UAAA,MAAM,EAAC,MAHR;AAIC,UAAA,EAAE,EAAC,MAJJ;AAKC,UAAA,KAAK,EAAExB,IALR;AAMC,UAAA,YAAY,EAAE,MAAKwB,YANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbD,EAqBC,oBAAC,SAAD;AACC,UAAA,UAAU,EAAE,IADb;AAEC,UAAA,WAAW,EAAC,wBAFb;AAGC,UAAA,MAAM,EAAC,QAHR;AAIC,UAAA,MAAM,EAAC,OAJR;AAKC,UAAA,EAAE,EAAC,aALJ;AAMC,UAAA,KAAK,EAAEvB,WANR;AAOC,UAAA,YAAY,EAAE,MAAKuB,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBD,EA8BC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC;AACmB,UAAA,SAAS,EAAC,UAD7B;AAEmB,UAAA,EAAE,EAAC,UAFtB;AAGmB,UAAA,IAAI,EAAC,UAHxB;AAImB,UAAA,QAAQ,EAAE,MAAKE,YAJlC;AAKmB,UAAA,OAAO,EAAErB,QAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EASgB;AACI,UAAA,SAAS,EAAC,gBADd;AAEI,UAAA,OAAO,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAThB,CA9BD,EA4CckD,SAAS,KAAK,sBAAd,IACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,EAEX;AACmB,UAAA,SAAS,EAAC,UAD7B;AAEmB,UAAA,EAAE,EAAC,YAFtB;AAGmB,UAAA,IAAI,EAAC,UAHxB;AAImB,UAAA,QAAQ,EAAE,MAAK7B,YAJlC;AAKmB,UAAA,OAAO,EAAEpB,UAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFW,EASI;AACI,UAAA,SAAS,EAAC,gBADd;AAEI,UAAA,OAAO,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,CA7Cd,CADD;AA+DA,OAjEF,CADD;AAqEA,KAxUkB;;AAElB,UAAKjC,KAAL,GAAa;AACZ6C,MAAAA,OAAO,EAAE,EADG;AAEZgB,MAAAA,IAAI,EAAE,CAFM;AAGZkB,MAAAA,GAAG,EAAE,KAHO;AAIZjC,MAAAA,cAAc,EAAE,KAJJ;AAKZX,MAAAA,SAAS,EAAE,KALC;AAMZvB,MAAAA,IAAI,EAAE;AACLY,QAAAA,OAAO,EAAE,EADJ;AAELO,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,QAAQ,EAAE,KAHL;AAILC,QAAAA,UAAU,EAAE,KAJP;AAKLN,QAAAA,IAAI,EAAE,EALD;AAMLC,QAAAA,WAAW,EAAE;AANR,OANM;AAcZQ,MAAAA,SAAS,EAAE;AAdC,KAAb;AAFkB;AAkBlB;;;;wCAEmB;AAAA,yBACuC,KAAKd,KAD5C;AAAA,UACXhB,QADW,gBACXA,QADW;AAAA,UACDI,IADC,gBACDA,IADC;AAAA,UACKM,SADL,gBACKA,SADL;AAAA,UACgBd,IADhB,gBACgBA,IADhB;AAAA,UACsBU,IADtB,gBACsBA,IADtB;AAAA,UAC4BD,MAD5B,gBAC4BA,MAD5B;AAAA,UAEXyE,KAFW,GAEuB5F,MAFvB,CAEX4F,KAFW;AAAA,UAEJC,SAFI,GAEuB7F,MAFvB,CAEJ6F,SAFI;AAAA,UAEOvB,KAFP,GAEuBtE,MAFvB,CAEOsE,KAFP;AAAA,UAEcwB,IAFd,GAEuB9F,MAFvB,CAEc8F,IAFd;;AAInB,UAAIzF,aAAa,CAACK,IAAD,CAAjB,EAAyB;AACxB,YAAIS,MAAJ,EAAY;AACXjB,UAAAA,aAAY,WAAIY,QAAJ,SAAeK,MAAf,SAAwBD,IAAxB,EAAZ;AACA,SAFD,MAEO;AACNhB,UAAAA,aAAY,WAAIY,QAAJ,SAAeI,IAAf,EAAZ;AACA;;AACDM,QAAAA,SAAS,CAACoE,KAAD,CAAT;AACA,OAPD,MAOO,IAAI9E,QAAQ,KAAK+E,SAAjB,EAA4B;AAClC,YAAI,CAACxF,aAAa,CAACe,IAAD,CAAlB,EAA0B;AACzB,eAAKW,aAAL,CAAmBX,IAAnB;AACA,SAFD,MAEO;AACN,cAAID,MAAJ,EAAY;AACXK,YAAAA,SAAS,WAAIsE,IAAJ,SAAW3E,MAAX,EAAT;AACA,WAFD,MAEO;AACNK,YAAAA,SAAS,CAAC8C,KAAD,CAAT;AACA;AACD;AACD;;AAED,UAAIpD,IAAI,IAAIA,IAAI,KAAK,IAArB,EAA2B;AAC1BM,QAAAA,SAAS,WAAIV,QAAJ,QAAT;AACA;AACD;;;uCAEkBiF,S,EAAW;AAAA,yBACD,KAAKjE,KADJ;AAAA,UACrBnB,SADqB,gBACrBA,SADqB;AAAA,UACVO,IADU,gBACVA,IADU;;AAE7B,UAAI6E,SAAS,CAAC7E,IAAV,KAAmBA,IAAvB,EAA6B;AAC5B,aAAKwB,QAAL,CAAc;AAAC2B,UAAAA,IAAI,EAAE2B,MAAM,CAAC9E,IAAI,CAAC+E,KAAL,CAAW,CAAX,EAAc/E,IAAI,CAACqD,MAAnB,CAAD;AAAb,SAAd;AACA;;AACD,UAAIwB,SAAS,CAACpF,SAAV,KAAwBA,SAA5B,EAAuC;AACtC,aAAKkC,aAAL,CAAmBlC,SAAnB;AACA;AACD;;;6BAmRQ;AAAA;;AAAA,yBACiF,KAAKH,KADtF;AAAA,UACAmC,SADA,gBACAA,SADA;AAAA,UACWU,OADX,gBACWA,OADX;AAAA,UACoBgB,IADpB,gBACoBA,IADpB;AAAA,UAC0Bf,cAD1B,gBAC0BA,cAD1B;AAAA,UAC0CiC,GAD1C,gBAC0CA,GAD1C;AAAA,UAC+C3C,SAD/C,gBAC+CA,SAD/C;AAAA,UACkEL,QADlE,gBAC0DnB,IAD1D,CACkEmB,QADlE;AAER,UAAM2D,SAAS,GAAG7B,IAAI,GAAG,CAAC,GAA1B;AACA,UAAM8B,QAAQ,GAAGZ,GAAG,GAAG,KAAH,GAAW,IAA/B;AACA,UAAIa,SAAJ;;AACA,UAAIxD,SAAJ,EAAe;AACdwD,QAAAA,SAAS,GAAGxD,SAAS,CAAC6B,GAAV,CAAc,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACC,QAAV;AAAA,SAAnB,CAAZ;AACA;;AACD,UAAI0B,aAAJ;AACA,UAAIpC,KAAJ;AACA,UAAIqC,MAAJ;;AACA,cAAOjC,IAAP;AACC,aAAK,CAAL;AACCgC,UAAAA,aAAa,GAAG1D,SAAS,GAAG,oBAAH,GAA0B,mBAAnD;AACA;;AACD,aAAK,CAAL;AACCsB,UAAAA,KAAK,GAAGtB,SAAS,GAAG,yBAAH,GAA+B,uBAAhD;AACA2D,UAAAA,MAAM,GAAG,eAAT;AACA;;AACD,aAAK,CAAL;AACCD,UAAAA,aAAa,GAAG1D,SAAS,4BAAoBJ,QAApB,mCAAmDA,QAAnD,OAAzB;AACA0B,UAAAA,KAAK,GAAGtB,SAAS,GAAG,4BAAH,GAAkC,uBAAnD;AACA;;AACD;AACC0D,UAAAA,aAAa,GAAG,EAAhB;AAbF;;AAeA,aACC,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,UAACV,OAAD,EAAa;AACb,eACC;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAE;AAACY,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,SAAS,uBAAgBN,SAAhB;AAAnB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAI,CAACT,iBAAL,EADF,CADD,EAIC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAE;AAACc,YAAAA,IAAI,EAAE,MAAP;AAAeC,YAAAA,SAAS,uBAAgBN,SAAhB;AAAxB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEP,OAAO,GACJ;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK1B,KAAL,CADC,CADI,GAIL;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,KAA7B,CALJ,EAOC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEI,IAAI,KAAK,CAAT,IACA,oBAAC,WAAD;AACC,UAAA,OAAO,EAAEhB,OADV;AAEC,UAAA,WAAW,EAAE,MAAI,CAAC2B,iBAFnB;AAGC,UAAA,cAAc,EAAE1B,cAHjB;AAIC,UAAA,SAAS,EAAE8C,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EASC;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CATD,CAPD,CADD,EAsBE,CAACT,OAAD,IACA;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEA,OAAO,GACJ;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKW,MAAL,CADC,CADI,GAIL;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,MAA7B,CALJ,EAOC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE1D,SAAS,CAAC6B,GAAV,CAAc,UAAAC,KAAK,EAAE;AACrB,iBACC,oBAAC,QAAD;AACC,YAAA,GAAG,EAAEA,KAAK,CAACC,QADZ;AAEC,YAAA,OAAO,EAAE,MAAI,CAACK,iBAFf;AAGC,YAAA,KAAK,EAAEN,KAHR;AAIC,YAAA,KAAK,EAAE,IAJR;AAKC,YAAA,UAAU,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA,SAVA,CADF,CAPD,CAvBF,CADD,CAJD,EAoDC;AAAK,UAAA,SAAS,EAAC,4BAAf;AAA4C,UAAA,KAAK,EAAE;AAAC6B,YAAAA,IAAI,EAAE,MAAP;AAAeC,YAAAA,SAAS,uBAAgBN,SAAhB;AAAxB,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE7B,IAAI,KAAK,CAAT,IACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEzB,SAAS,CAAC6B,GAAV,CAAc,UAAAC,KAAK,EAAE;AACrB,iBACC,oBAAC,QAAD;AACC,YAAA,GAAG,EAAEA,KAAK,CAACC,QADZ;AAEC,YAAA,OAAO,EAAE,MAAI,CAACK,iBAFf;AAGC,YAAA,KAAK,EAAEN,KAHR;AAIC,YAAA,KAAK,EAAE,IAJR;AAKC,YAAA,UAAU,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA,SAVA,CADF,CADD,CADD,CAFF,EAoBEiB,OAAO,GACJ;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK1B,KAAL,CADC,CADI,GAIL;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,KAA7B,CAxBJ,CApDD,EA+EC;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEI,IAAI,GAAG,CAAP,IACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,MAAD;AACC,UAAA,KAAK,EAAC,MADP;AAEC,UAAA,UAAU,EAAC,OAFZ;AAGC,UAAA,KAAK,EAAC,mBAHP;AAIC,UAAA,MAAM,EAAC,MAJR;AAKC,UAAA,KAAK,EAAEsB,OAAO,GAAG,MAAH,GAAY,OAL3B;AAMC,UAAA,MAAM,EAAEA,OAAO,GAAG,OAAH,GAAa,QAN7B;AAOC,UAAA,WAAW,EAAE;AAAA,mBAAI,MAAI,CAACZ,IAAL,EAAJ;AAAA,WAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAFF,EAcEV,IAAI,KAAK,CAAT,GACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA;AAAG,UAAA,SAAS,sBAAe8B,QAAf,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwCvD,SAAS,CAAC2B,MAAlD,CAFA,EAGA;AAAG,UAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHA,CADF,GAMG;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6B8B,aAA7B,CApBL,EAsBC,oBAAC,MAAD;AACC,UAAA,KAAK,EAAEhC,IAAI,KAAK,CAAT,GAAa,SAAb,GAAyB,MADjC;AAEC,UAAA,UAAU,EAAC,OAFZ;AAGC,UAAA,KAAK,EAAC,mBAHP;AAIC,UAAA,MAAM,EAAC,MAJR;AAKC,UAAA,UAAU,EAAE,CAAC9B,QALd;AAMC,UAAA,KAAK,EAAEoD,OAAO,GAAG,MAAH,GAAY,OAN3B;AAOC,UAAA,MAAM,EAAEA,OAAO,GAAG,OAAH,GAAa,QAP7B;AAQC,UAAA,WAAW,EAAE;AAAA,mBAAI,MAAI,CAACxB,IAAL,EAAJ;AAAA,WARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBD,CA/ED,CADD;AAmHA,OArHF,CADD;AAyHA;;;;EA/doB9E,S;;AAketB,eAAeC,OAAO,CAACiB,eAAD,EAAkBe,kBAAlB,CAAP,CAA6CO,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './new-deck.styles.css';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport MediaQuery from 'react-responsive';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport EntryRow from '../../components/entry-row/entry-row.component';\nimport TextInput from '../../components/text-input/text-input.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport apiRequest from '../../helpers/apiRequest';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport Button from '../../components/button/button.component';\nimport { routes } from '../../redux/routing/routing.constants';\nimport { setLoading } from '../../redux/loading/loading.actions';\nimport { setPrevRoute } from '../../redux/routing/routing.actions';\nimport { updateObject, connectionError, isEmptyObject } from '../../helpers/helpers';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  \tuser: state.user.user,\n  \tsearchKey: state.temp.searchKey,\n  \tsearchType: state.temp.searchType,\n  \tpathName: state.router.location.pathname,\n    hash: state.router.location.hash,\n    search: state.router.location.search,\n    deck: state.deck.deck,\n    deckEntries: state.deck.deckEntries,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateURL: (searchKey) => dispatch(push(searchKey)),\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t\tpresentAlert: (alert) => dispatch(setAlert(alert)),\n\t\tsetPrevRoute: (prevRoute) => dispatch(setPrevRoute(prevRoute)),\n\t}\n} \n\nclass NewDeck extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tentries: [],\n\t\t\tstep: 0,\n\t\t\tpop: false,\n\t\t\tsearchComplete: false,\n\t\t\tisEditing: false,\n\t\t\tdeck: {\n\t\t\t\tdeck_id: '',\n\t\t\t\tdeckName: '',\n\t\t\t\tisPublic: false,\n\t\t\t\tisOfficial: false,\n\t\t\t\ttags: '',\n\t\t\t\tdescription: ''\n\t\t\t},\n\t\t\tentryList: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { pathName, hash, updateURL, user, deck, search } = this.props;\n\t\tconst { LOGIN, EDIT_DECK, LEARN, DECK } = routes;\n\n\t\tif (isEmptyObject(user)) {\n\t\t\tif (search) {\n\t\t\t\tsetPrevRoute(`${pathName}${search}${hash}`)\n\t\t\t} else {\n\t\t\t\tsetPrevRoute(`${pathName}${hash}`)\n\t\t\t}\n\t\t\tupdateURL(LOGIN)\t\n\t\t} else if (pathName === EDIT_DECK) {\n\t\t\tif (!isEmptyObject(deck)) {\n\t\t\t\tthis.setDeckToEdit(deck)\n\t\t\t} else {\n\t\t\t\tif (search) {\n\t\t\t\t\tupdateURL(`${DECK}${search}`)\n\t\t\t\t} else {\n\t\t\t\t\tupdateURL(LEARN)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\t\n\t\tif (hash && hash !== '#0') {\n\t\t\tupdateURL(`${pathName}#0`)\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { searchKey, hash } = this.props;\n\t\tif (prevProps.hash !== hash) {\n\t\t\tthis.setState({step: Number(hash.slice(1, hash.length))})\n\t\t}\n\t\tif (prevProps.searchKey !== searchKey) {\n\t\t\tthis.searchEntries(searchKey)\n\t\t}\n\t}\n\n\tsetDeckToEdit = (deck) => {\n\t\tconst { deckEntries } = this.props;\n\t\tconst {\n\t\t\tdeck_id,\n\t\t\tdeck_name,\n\t\t\tis_public,\n\t\t\ttags,\n\t\t\tdescription,\n\t\t\tuser_id\n\t\t} = deck;\n\t\t\n\t\tconst newDeck = {\n\t\t\tdeck_id,\n\t\t\tdeckName: deck_name,\n\t\t\tisPublic: is_public === '0' ? false : true,\n\t\t\tisOfficial: user_id === 0 ? true : false,\n\t\t\ttags: tags || '',\n\t\t\tdescription: description || ''\n\t\t}\n\t\tthis.setState({\n\t\t\tisEditing: true,\n\t\t\tentryList: deckEntries,\n\t\t\tdeck: newDeck \n\t\t})\n\t}\n\n\tsearchEntries = (searchKey) => {\n\t\tconst { setLoading, searchType } = this.props;\n\t\tsetLoading(true)\n\t\tapiRequest({\n\t\t\tendPoint: '/search',\n\t\t\tmethod: 'POST',\n\t\t\tbody: {searchKey, searchType}\n\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tentries: data\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tentries: []\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis.setState({searchComplete: true})\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}\n\n\thandleChange = (event) => {\n\t\tconst deck = { ...this.state.deck }\n\t    const newDeck = updateObject(event, deck)\n\t    this.setState({deck: newDeck})\n\t}\n\n\thandlePublic = (event) => {\n\t\tconst deck = { ...this.state.deck }\n\t\tdeck[event.target.id] = !deck[event.target.id];\n\t\tthis.setState({deck});\n\t}\n\n\tnotEnoughMessage = () => {\n\t\toptionAlert({\n\t\t    title: 'Not Enough Entries',\n\t\t    message: 'You must have at least 5 entries added to your deck before proceeding!'\n\t    })\n\t}\n\n\tnext = () => {\n\t\tconst { \n\t\t\tupdateURL, \n\t\t\tpresentAlert, \n\t\t\tsetLoading, \n\t\t\tpathName, \n\t\t\tsearch,\n\t\t\tuser: { \n\t\t\t\tuserID \n\t\t\t} \n\t\t} = this.props;\n\n\t\tlet { \n\t\t\tstep, \n\t\t\tentryList, \n\t\t\tdeck: { \n\t\t\t\tdeck_id,\n\t\t\t\tdeckName, \n\t\t\t\tisPublic, \n\t\t\t\tisOfficial, \n\t\t\t\ttags,\n\t\t\t\tdescription \n\t\t\t} \n\t\t} = this.state;\n\t\tconst { LEARN } = routes;\n\t\t\n\t\tif (step <= 1 && deckName) {\n\t\t\tif (step === 1 && entryList.length < 5) {\n\t\t\t\tthis.notEnoughMessage()\n\t\t\t} else {\n\t\t\t\tstep += 1\n\t\t\t\tupdateURL(`${pathName}${search}#${step}`)\n\t\t\t}\n\t\t} else if (step === 2) {\n\t\t\tif (entryList.length < 5) {\n\t\t\t\tthis.notEnoughMessage()\n\t\t\t} else {\n\t\t\t\tsetLoading(true);\n\t\t\t\tlet entry_ids = entryList.map(entry => entry.entry_id)\n\t\t\t\tapiRequest({\n\t\t\t\t\tendPoint: '/new-deck',\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tdeck_id,\n\t\t\t\t\t\tdeck_name: deckName,\n\t\t\t\t\t\tuser_id: userID,\n\t\t\t\t\t\tis_public: isPublic ? '1' : '0',\n\t\t\t\t\t\tis_official: isOfficial,\n\t\t\t\t\t\ttags,\n\t\t\t\t\t\tdescription, \n\t\t\t\t\t\tentry_ids\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data && data.error != null) {\n\t\t\t\t\t\t\tconst { title, message } = data.error;\n\t\t\t\t\t\t\toptionAlert({\n\t\t\t\t\t\t\t    title,\n\t\t\t\t\t\t\t    message\n\t\t\t\t\t\t    })\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet title, message;\n\t\t\t\t\t\t\tif (deck_id) {\n\t\t\t\t\t\t\t\ttitle = 'Deck Updated'\n\t\t\t\t\t\t\t\tmessage = `Your deck, \"${deckName}\", has been updated!`\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttitle = 'Deck Created'\n\t\t\t\t\t\t\t\tmessage = `Your new deck, \"${deckName}\", has been created!`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst alert = {\n\t\t\t\t\t\t        title,\n\t\t\t\t\t\t        message,\n\t\t\t\t\t\t        showAlert: true,\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t    presentAlert(alert);\n\t\t\t\t\t\t    updateURL(LEARN)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err=>{\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\tconnectionError()\n\t\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tback = () => {\n\t\tconst { updateURL, pathName, search } = this.props;\n\t\tlet { step } = this.state;\n\t\tstep -= 1\n\t\tupdateURL(`${pathName}${search}#${step}`)\n\t}\n\n\thandleEntrySelect = (entry) => {\n\t\tconst { entryList } = this.state;\n\t\tlet i = entryList.length;\n\n\t\tconst addEntry = (list, entryToAdd) => {\n\t\t\tlist.push(entryToAdd);\n\t\t\tthis.setState({list})\n\t\t\tthis.popNumber();\n\t\t}\n\n\t\tif (i < 1) {\n\t\t\taddEntry(entryList, entry);\n\t\t} else {\n\t\t\twhile (i--) {\n\t\t\t\tif (entryList[i].entry_id === entry.entry_id) {\n\t\t\t\t\tentryList.splice(i, 1);\n\t\t\t\t\tthis.setState({entryList})\n\t\t\t\t\tthis.popNumber();\n\t\t\t\t\treturn;\n\t\t\t\t}\t\n\t\t\t}\n\t\t\taddEntry(entryList, entry);\n\t\t}\n\t}\n\n\tpopNumber = () => {\n\t\tthis.setState({pop: true})\n\t\tsetTimeout(()=>this.setState({pop: false}), 500)\n\t}\n\n\trenderNewDeckForm = () => {\n\t\tconst { user: { userEmail } } = this.props;\n\t\tconst { isEditing } = this.state;\n\t\tconst { deckName, tags, isPublic, description, isOfficial } = this.state.deck;\n\t\tconst message = isEditing ? 'Edit Deck Details' : 'New Deck Details';\n\t\treturn (\n\t\t\t<MediaQuery maxWidth={699}>\n\t\t\t\t{(matches) => {\n\t\t\t\t\treturn \t(\n\t\t\t\t\t\t<div className='inner-new-entry'>\n\t\t\t\t\t\t\t{matches \n\t\t\t\t\t\t\t\t? <h3>{message}</h3>\n\t\t\t\t\t\t\t\t: <h2>{message}</h2>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\tplaceHolder='Name of Deck'\n\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\tid='deckName'\n\t\t\t\t\t\t\t\tvalue={deckName}\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\tplaceHolder='Tags (optional)'\n\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\tid='tags'\n\t\t\t\t\t\t\t\tvalue={tags}\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\tisTextArea={true}\n\t\t\t\t\t\t\t\tplaceHolder='Description (optional)'\n\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\theight='100px'\n\t\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='agree-row'>\n\t\t\t\t\t\t\t\t<p className='button-label'>Make Public</p>\n\t\t\t\t\t\t\t\t<input \n\t\t\t                        className='checkbox'\n\t\t\t                        id='isPublic'\n\t\t\t                        type=\"checkbox\"\n\t\t\t                        onChange={this.handlePublic} \n\t\t\t                        checked={isPublic}\n\t\t\t                    />\n\t\t\t                    <label \n\t\t\t                        className='checkbox-label' \n\t\t\t                        htmlFor=\"isPublic\"\n\t\t\t                    ></label>\n\t\t\t                </div>\n\t\t\t                {userEmail === 'brimac1634@gmail.com' &&\n\t\t\t                \t<div className='agree-row'>\n\t\t\t                \t\t<p className='button-label'>CantoTalk Official</p>\n\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t                        className='checkbox'\n\t\t\t\t                        id='isOfficial'\n\t\t\t\t                        type=\"checkbox\"\n\t\t\t\t                        onChange={this.handlePublic} \n\t\t\t\t                        checked={isOfficial}\n\t\t\t\t                    />\n\t\t\t\t                    <label \n\t\t\t\t                        className='checkbox-label' \n\t\t\t\t                        htmlFor=\"isOfficial\"\n\t\t\t\t                    ></label>\n\t\t\t\t                </div>\n\t\t\t            \t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</MediaQuery>\n\t\t)\n\t}\n\n\n\trender() {\n\t\tconst { isEditing, entries, step, searchComplete, pop, entryList, deck: { deckName } } = this.state;\n\t\tconst translate = step * -100\n\t\tconst popClass = pop ? 'pop' : null;\n\t\tlet addedList;\n\t\tif (entryList) {\n\t\t\taddedList = entryList.map(entry => entry.entry_id);\n\t\t}\n\t\tlet buttonMessage;\n\t\tlet title;\n\t\tlet title2;\n\t\tswitch(step) {\n\t\t\tcase 0:\n\t\t\t\tbuttonMessage = isEditing ? 'Next: Edit Entries' : 'Next: Add Entries'\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\ttitle = isEditing ? 'Need to edit your deck?' : 'Add to your new deck!'\n\t\t\t\ttitle2 = 'Entries added'\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuttonMessage = isEditing ? `Update Deck: \"${deckName}\"` : `Create Deck: \"${deckName}\"`\n\t\t\t\ttitle = isEditing ? 'Review the updated entries' : 'Review your new deck!'\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbuttonMessage = ''\n\t\t}\n\t\treturn (\n\t\t\t<MediaQuery maxWidth={699}>\n\t\t\t\t{(matches) => {\n\t\t\t\t\treturn \t(\n\t\t\t\t\t\t<div className='page new-deck'>\n\t\t\t\t\t\t\t<div className='slide over-flow' style={{left: 0, transform: `translateX(${translate}%)`}}>\n\t\t\t\t\t\t\t\t{this.renderNewDeckForm()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='slide over-flow' style={{left: '100%', transform: `translateX(${translate}%)`}}>\n\t\t\t\t\t\t\t\t<div className='list-flex'>\n\t\t\t\t\t\t\t\t\t<div className='new-list-container'>\n\t\t\t\t\t\t\t\t\t\t{matches \n\t\t\t\t\t\t\t\t\t\t\t? \t<div className='slide-title'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t: <h2 className='slide-title'>{title}</h2>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<div className='list-search'>\n\t\t\t\t\t\t\t\t\t\t\t{step === 1 &&\n\t\t\t\t\t\t\t\t\t\t\t\t<EntriesList \n\t\t\t\t\t\t\t\t\t\t\t\t\tentries={entries}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectEntry={this.handleEntrySelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsearchComplete={searchComplete}\n\t\t\t\t\t\t\t\t\t\t\t\t\taddedList={addedList}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<div className='search-top'>\n\t\t\t\t\t\t\t\t\t\t\t\t<SearchBar />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{!matches &&\n\t\t\t\t\t\t\t\t\t\t<div className='new-list-container'>\n\t\t\t\t\t\t\t\t\t\t\t{matches \n\t\t\t\t\t\t\t\t\t\t\t\t? \t<div className='slide-title'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>{title2}</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t: <h2 className='slide-title'>{title2}</h2>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<div className='list-search'>\n\t\t\t\t\t\t\t\t\t\t\t\t{entryList.map(entry=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EntryRow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={entry.entry_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleX={this.handleEntrySelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry={entry}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowX={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='slide over-flow last-slide' style={{left: '200%', transform: `translateX(${translate}%)`}}>\n\t\t\t\t\t\t\t\t{step === 2 &&\n\t\t\t\t\t\t\t\t\t<div className='list-flex'>\n\t\t\t\t\t\t\t\t\t\t<div className='new-list-container'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='list-search-no-search'>\n\t\t\t\t\t\t\t\t\t\t\t\t{entryList.map(entry=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EntryRow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={entry.entry_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleX={this.handleEntrySelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentry={entry}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowX={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisDisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{matches \n\t\t\t\t\t\t\t\t\t? \t<div className='slide-title'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: <h2 className='slide-title'>{title}</h2>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='bottom-container'>\n\t\t\t\t\t\t\t\t{step > 0 &&\n\t\t\t\t\t\t\t\t\t<div className='back-button'>\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\ttitle='Back'\n\t\t\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\t\t\tcolor='var(--cantoWhite)'\n\t\t\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\t\t\twidth={matches ? '65px' : '100px'}\n\t\t\t\t\t\t\t\t\t\t\tmargin={matches ? '5px 0' : '20px 0'}\n\t\t\t\t\t\t\t\t\t\t\thandleClick={()=>this.back()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{step === 1 \n\t\t\t\t\t\t\t\t\t?\t<div className='row'>\n\t\t\t\t\t\t\t\t\t\t\t<p>Next: Confirm{` `}</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className={`left-marg ${popClass}`}>{entryList.length}</p> \n\t\t\t\t\t\t\t\t\t\t\t<p className='button-label left-marg'>{` `}Entries</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t: \t<p className='button-label'>{buttonMessage}</p>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\ttitle={step === 2 ? 'Confirm' : 'Next'}\n\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\tcolor='var(--cantoWhite)'\n\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\tisDisabled={!deckName}\n\t\t\t\t\t\t\t\t\twidth={matches ? '65px' : '100px'}\n\t\t\t\t\t\t\t\t\tmargin={matches ? '5px 0' : '20px 0'}\n\t\t\t\t\t\t\t\t\thandleClick={()=>this.next()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</MediaQuery>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDeck);"]},"metadata":{},"sourceType":"module"}