{"ast":null,"code":"import _objectSpread from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/client/src/pages/deck-view/deck-view.component.js\";\nimport React, { Component } from 'react';\nimport './deck-view.styles.css';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport apiRequest from '../../helpers/apiRequest';\nimport Deck from '../../components/deck/deck.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport Button from '../../components/button/button.component';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport { setLoading as _setLoading } from '../../redux/loading/loading.actions';\nimport { setDeck as _setDeck, setDeckEntries as _setDeckEntries } from '../../redux/deck-view/deck-view.actions';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\nimport { routes } from '../../redux/routing/routing.constants';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.user.user,\n    pathName: state.router.location.pathname,\n    search: state.router.location.search,\n    deck: state.deck.deck,\n    deckEntries: state.deck.deckEntries\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateURL: function updateURL(searchKey) {\n      return dispatch(push(searchKey));\n    },\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    },\n    presentAlert: function presentAlert(alert) {\n      return dispatch(setAlert(alert));\n    },\n    setDeck: function setDeck(deck) {\n      return dispatch(_setDeck(deck));\n    },\n    setDeckEntries: function setDeckEntries(deckEntries) {\n      return dispatch(_setDeckEntries(deckEntries));\n    }\n  };\n};\n\nvar DeckView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeckView, _Component);\n\n  function DeckView(props) {\n    var _this;\n\n    _classCallCheck(this, DeckView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeckView).call(this, props));\n\n    _this.getDeck = function (deck_id) {\n      var _this$props = _this.props,\n          setLoading = _this$props.setLoading,\n          setDeck = _this$props.setDeck,\n          userID = _this$props.user.userID;\n      setLoading(true);\n      apiRequest('POST', '/get-deck-by-id', {\n        deck_id: deck_id\n      }).then(function (data) {\n        if (data && !data.error) {\n          var user_id = data.user_id,\n              is_public = data.is_public;\n\n          if (userID === user_id || is_public) {\n            var deck = _objectSpread({}, data);\n\n            data.deck_name = deck.deck_name.charAt(0).toUpperCase() + deck.deck_name.slice(1);\n            setDeck(data);\n            setLoading(false);\n          } else {\n            var updateURL = _this.props.updateURL;\n            var LEARN = routes.LEARN;\n            setLoading(false);\n            optionAlert({\n              title: 'Oops!',\n              message: 'This deck belongs to another user and is not set to public.'\n            });\n            updateURL(LEARN);\n          }\n        }\n      }).catch(function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    _this.getDeckEntries = function (deck_id) {\n      var _this$props2 = _this.props,\n          setLoading = _this$props2.setLoading,\n          setDeckEntries = _this$props2.setDeckEntries,\n          userID = _this$props2.user.userID;\n      setLoading(true);\n      var endPoint = userID ? '/deck-entries-id' : '/deck-entries';\n      var body = userID ? {\n        deck_id: deck_id,\n        user_id: userID\n      } : {\n        deck_id: deck_id\n      };\n      apiRequest('POST', endPoint, body).then(function (data) {\n        if (data && !data.error) {\n          console.log(data);\n          setDeckEntries(data);\n        }\n\n        setLoading(false);\n      }).catch(function (err) {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    _this.startDeck = function () {\n      var _this$props3 = _this.props,\n          updateURL = _this$props3.updateURL,\n          deck_id = _this$props3.deck.deck_id;\n      var LEARN_GAME = routes.LEARN_GAME;\n      updateURL(\"\".concat(LEARN_GAME, \"?deck=\").concat(deck_id));\n    };\n\n    _this.editDeck = function () {\n      var _this$props4 = _this.props,\n          updateURL = _this$props4.updateURL,\n          search = _this$props4.search;\n      var EDIT_DECK = routes.EDIT_DECK;\n      updateURL(\"\".concat(EDIT_DECK).concat(search, \"#0\"));\n    };\n\n    _this.deleteDeck = function () {\n      var deck = _this.props.deck;\n      optionAlert({\n        title: 'Delete Deck',\n        message: 'Are you sure you want to delete this deck? This cannot be undone.',\n        buttons: [{\n          label: 'Yes',\n          onClick: function onClick() {\n            return _this.handleDelete(deck);\n          }\n        }, {\n          label: 'No',\n          onClick: null\n        }]\n      });\n    };\n\n    _this.handleDelete = function (deck) {\n      var _this$props5 = _this.props,\n          presentAlert = _this$props5.presentAlert,\n          updateURL = _this$props5.updateURL;\n      var deck_id = deck.deck_id,\n          deck_name = deck.deck_name;\n      var LEARN = routes.LEARN;\n\n      _setLoading(true);\n\n      apiRequest('POST', '/delete-deck', {\n        deck_id: deck_id\n      }).then(function (data) {\n        _setLoading(false);\n\n        if (data && !data.error) {\n          var alert = {\n            title: 'Deck Deleted',\n            message: \"Your deck, \\\"\".concat(deck_name, \"\\\", has been deleted.\"),\n            showAlert: true\n          };\n          presentAlert(alert);\n          updateURL(LEARN);\n        }\n      }).catch(function (err) {\n        console.log(err);\n\n        _setLoading(false);\n      });\n    };\n\n    _this.renderDeckView = function () {\n      var _this$props6 = _this.props,\n          user = _this$props6.user,\n          deck = _this$props6.deck,\n          deckEntries = _this$props6.deckEntries;\n      var user_id = deck.user_id,\n          tags = deck.tags,\n          users = deck.users,\n          name = deck.name,\n          description = deck.description,\n          date_created = deck.date_created,\n          is_public = deck.is_public;\n      is_public = is_public === '0' ? false : true;\n      var date = new Date(date_created);\n\n      if (Object.entries(deck).length) {\n        return React.createElement(\"div\", {\n          className: \"dual-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"half deck-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"center-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Deck Details\")), React.createElement(\"div\", {\n          className: \"deck-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"center-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(Deck, {\n          deck: deck,\n          isDisabled: true,\n          margin: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"push-right text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Button, {\n          title: \"Play\",\n          buttonType: \"ghost\",\n          color: \"var(--cantoWhite)\",\n          height: \"44px\",\n          width: \"100px\",\n          margin: \"10px 0\",\n          handleClick: function handleClick() {\n            return _this.startDeck();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), user_id === user.userID && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(Button, {\n          title: \"Edit Deck\",\n          buttonType: \"ghost\",\n          color: \"var(--cantoDarkBlue)\",\n          textColor: \"var(--cantoWhite)\",\n          height: \"44px\",\n          width: \"100px\",\n          margin: \"20px 0\",\n          handleClick: function handleClick() {\n            return _this.editDeck();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(Button, {\n          title: \"Delete\",\n          buttonType: \"ghost\",\n          color: \"var(--cantoDarkBlue)\",\n          textColor: \"var(--cantoWhite)\",\n          height: \"44px\",\n          width: \"100px\",\n          margin: \"20px 0\",\n          handleClick: function handleClick() {\n            return _this.deleteDeck();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"center-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, user_id === 0 ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"CantoTalk Official Deck\")) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Created by: \"), name), user_id !== 0 && date && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, \"Date created: \"), date.toDateString()), tags && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"tags: \"), tags), user_id !== 0 && users && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, \"Number of followers: \"), users), is_public === true && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"*This deck is public\")), description && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"Description: \"), description))), React.createElement(\"div\", {\n          className: \"half deck-entry-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, \"Entries in this deck\"), React.createElement(EntriesList, {\n          entries: deckEntries,\n          isDisabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        })));\n      }\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DeckView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          pathName = _this$props7.pathName,\n          updateURL = _this$props7.updateURL;\n      var DECK = routes.DECK,\n          LEARN = routes.LEARN;\n\n      if (pathName === DECK) {\n        var search = this.props.search;\n        var values = queryString.parse(search);\n        var deckID = values.deck;\n\n        if (deckID) {\n          this.getDeckEntries(deckID);\n          this.getDeck(deckID);\n        } else {\n          updateURL(LEARN);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"page over-flow-y\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.renderDeckView());\n    }\n  }]);\n\n  return DeckView;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckView);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/pages/deck-view/deck-view.component.js"],"names":["React","Component","push","connect","queryString","apiRequest","Deck","EntriesList","Button","optionAlert","setLoading","setDeck","setDeckEntries","setAlert","routes","mapStateToProps","state","ownProps","user","pathName","router","location","pathname","search","deck","deckEntries","mapDispatchToProps","dispatch","updateURL","searchKey","loading","presentAlert","alert","DeckView","props","getDeck","deck_id","userID","then","data","error","user_id","is_public","deck_name","charAt","toUpperCase","slice","LEARN","title","message","catch","err","console","log","getDeckEntries","endPoint","body","startDeck","LEARN_GAME","editDeck","EDIT_DECK","deleteDeck","buttons","label","onClick","handleDelete","showAlert","renderDeckView","tags","users","name","description","date_created","date","Date","Object","entries","length","toDateString","DECK","values","parse","deckID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './deck-view.styles.css';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport apiRequest from '../../helpers/apiRequest';\nimport Deck from '../../components/deck/deck.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport Button from '../../components/button/button.component';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport { setLoading } from '../../redux/loading/loading.actions';\nimport { setDeck, setDeckEntries } from '../../redux/deck-view/deck-view.actions';\nimport { setAlert } from '../../redux/pop-up-alert/pop-up-alert.actions';\nimport { routes } from '../../redux/routing/routing.constants';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  \tuser: state.user.user,\n    pathName: state.router.location.pathname,\n    search: state.router.location.search,\n    deck: state.deck.deck,\n    deckEntries: state.deck.deckEntries,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateURL: (searchKey) => dispatch(push(searchKey)),\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t\tpresentAlert: (alert) => dispatch(setAlert(alert)),\n\t\tsetDeck: (deck) => dispatch(setDeck(deck)),\n\t\tsetDeckEntries: (deckEntries) => dispatch(setDeckEntries(deckEntries)),\n\t}\n} \n\nclass DeckView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { pathName,updateURL } = this.props;\n\t\tconst { DECK, LEARN } = routes;\n\n\t\tif (pathName === DECK) {\n\t\t\tconst { search } = this.props;\n\t\t\tconst values = queryString.parse(search)\n\t\t\tconst deckID = values.deck\n\t\t\tif (deckID) {\n\t\t\t\tthis.getDeckEntries(deckID);\n\t\t\t\tthis.getDeck(deckID);\n\t\t\t} else {\n\t\t\t\tupdateURL(LEARN)\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDeck = (deck_id) => {\n\t\tconst { setLoading, setDeck, user: { userID } } = this.props;\n\t\tsetLoading(true)\n\t\tapiRequest('POST', '/get-deck-by-id', {deck_id})\n\t\t\t.then(data => {\n\t\t\t\tif (data && !data.error) {\n\t\t\t\t\tconst { user_id, is_public } = data;\n\t\t\t\t\tif (userID === user_id || is_public) {\n\t\t\t\t\t\tconst deck = {...data};\n\t\t\t\t\t\tdata.deck_name = deck.deck_name.charAt(0).toUpperCase() + deck.deck_name.slice(1);\n\t\t\t\t\t\tsetDeck(data)\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst { updateURL } = this.props;\n\t\t\t\t\t\tconst { LEARN } = routes;\n\t\t\t\t\t\tsetLoading(false)\n\t\t\t\t\t\toptionAlert({\n\t\t\t\t\t\t    title: 'Oops!',\n\t\t\t\t\t\t    message: 'This deck belongs to another user and is not set to public.'\n\t\t\t\t\t    })\n\t\t\t\t\t    updateURL(LEARN)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}\n\n\tgetDeckEntries = (deck_id) => {\n\t\tconst { setLoading, setDeckEntries, user: { userID } } = this.props;\n\t\tsetLoading(true)\n\t\tconst endPoint = userID ? '/deck-entries-id' : '/deck-entries';\n\t\tconst body = userID \n\t\t\t? {deck_id, user_id: userID} \n\t\t\t: {deck_id};\n\t\tapiRequest('POST', endPoint, body)\n\t\t\t.then(data => {\n\t\t\t\tif (data && !data.error) {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tsetDeckEntries(data)\n\t\t\t\t}\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}\n\n\tstartDeck = () => {\n\t\tconst { updateURL, deck: { deck_id } } = this.props;\n\t\tconst { LEARN_GAME } = routes;\n\t\tupdateURL(`${LEARN_GAME}?deck=${deck_id}`)\n\t}\n\n\teditDeck = () => {\n\t\tconst { updateURL, search } = this.props;\n\t\tconst { EDIT_DECK } = routes;\n\t\tupdateURL(`${EDIT_DECK}${search}#0`)\n\t}\n\n\tdeleteDeck = () => {\n\t\tconst { deck } = this.props;\n\t\toptionAlert({\n\t\t    title: 'Delete Deck',\n\t\t    message: 'Are you sure you want to delete this deck? This cannot be undone.',\n\t\t    buttons: [\n\t\t      {\n\t\t        label: 'Yes',\n\t\t        onClick: ()=>this.handleDelete(deck)\n\t\t      },\n\t\t      { \n\t\t        label: 'No',\n\t\t        onClick: null\n\t\t      }\n\t\t    ]\n\t    })\n\t}\n\n\thandleDelete = (deck) => {\n\t\tconst { presentAlert, updateURL } = this.props;\n\t\tconst { deck_id, deck_name } = deck;\n\t\tconst { LEARN } = routes;\n\t\tsetLoading(true)\n\t\tapiRequest('POST', '/delete-deck', {deck_id})\n\t\t\t.then(data => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (data && !data.error) {\n\t\t\t\t\tconst alert = {\n\t\t\t\t        title: 'Deck Deleted',\n\t\t\t\t        message: `Your deck, \"${deck_name}\", has been deleted.`,\n\t\t\t\t        showAlert: true,\n\t\t\t\t    }\n\t\t\t\t    presentAlert(alert);\n\t\t\t\t    updateURL(LEARN)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tconsole.log(err)\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t}\n\n\trenderDeckView = () => {\n\t\tconst { user, deck, deckEntries } = this.props;\n\t\tlet { user_id, tags, users, name, description, date_created, is_public } = deck;\n\t\tis_public = is_public === '0' ? false : true;\n\t\tconst date = new Date(date_created);\n\n\t\tif (Object.entries(deck).length) {\n\t\t\treturn (\n\t\t\t\t<div className='dual-wrap'>\n\t\t\t\t\t<div className='half deck-details'>\n\t\t\t\t\t\t<div className='center-text'>\n\t\t\t\t\t\t\t<h2>Deck Details</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='deck-info'>\n\t\t\t\t\t\t\t<div className='center-left'>\n\t\t\t\t\t\t\t\t<Deck \n\t\t\t\t\t\t\t\t\tdeck={deck} \n\t\t\t\t\t\t\t\t\tisDisabled={true} \n\t\t\t\t\t\t\t\t\tmargin='0' \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='push-right text-right'>\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\ttitle='Play'\n\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\tcolor='var(--cantoWhite)'\n\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\t\t\t\tmargin='10px 0'\n\t\t\t\t\t\t\t\t\thandleClick={()=>this.startDeck()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{user_id === user.userID &&\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\ttitle='Edit Deck'\n\t\t\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\t\t\tcolor='var(--cantoDarkBlue)'\n\t\t\t\t\t\t\t\t\t\t\ttextColor='var(--cantoWhite)'\n\t\t\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\t\t\t\thandleClick={()=>this.editDeck()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\ttitle='Delete'\n\t\t\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\t\t\tcolor='var(--cantoDarkBlue)'\n\t\t\t\t\t\t\t\t\t\t\ttextColor='var(--cantoWhite)'\n\t\t\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\t\t\t\thandleClick={()=>this.deleteDeck()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='center-left'>\n\t\t\t\t\t\t\t{user_id === 0\n\t\t\t\t\t\t\t\t?\t<p><strong>CantoTalk Official Deck</strong></p>\n\t\t\t\t\t\t\t\t: \t<p><strong>Created by: </strong>{name}</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{user_id !== 0 && date &&\n\t\t\t\t\t\t\t\t<p><strong>Date created: </strong>{date.toDateString()}</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{tags &&\n\t\t\t\t\t\t\t\t<p><strong>tags: </strong>{tags}</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{user_id !== 0 && users &&\n\t\t\t\t\t\t\t\t<p><strong>Number of followers: </strong>{users}</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{is_public === true &&\n\t\t\t\t\t\t\t\t<p><strong>*This deck is public</strong></p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{description &&\n\t\t\t\t\t\t\t\t<p><strong>Description: </strong>{description}</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='half deck-entry-list'>\n\t\t\t\t\t\t<h2>Entries in this deck</h2>\n\t\t\t\t\t\t<EntriesList \n\t\t\t\t\t\t\tentries={deckEntries}\n\t\t\t\t\t\t\tisDisabled={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='page over-flow-y'>\n\t\t\t\t{this.renderDeckView()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckView);"]},"metadata":{},"sourceType":"module"}