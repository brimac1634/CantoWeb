{"ast":null,"code":"import _objectSpread from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/Containers/AddNewEntry/AddNewEntry.js\";\nimport React, { Component } from 'react';\nimport './AddNewEntry.css';\nimport { connect } from 'react-redux';\nimport { optionAlert } from '../OptionAlert/OptionAlert';\nimport MediaQuery from 'react-responsive';\nimport TextInput from '../../Components/TextInput/TextInput';\nimport Button from '../../Components/Button/Button';\nimport apiRequest from '../../Helpers/apiRequest';\nimport { setLoading as _setLoading } from '../../Loading/actions';\nimport { push } from 'connected-react-router';\nimport { routes } from '../../Routing/constants';\nimport { updateObject, serverError } from '../../Helpers/helpers';\nimport fields from './AddNewEntryFields';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    },\n    updateURL: function updateURL(path) {\n      return dispatch(push(path));\n    }\n  };\n};\n\nvar AddNewEntry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNewEntry, _Component);\n\n  function AddNewEntry(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewEntry);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNewEntry).call(this, props));\n\n    _this.handleChange = function (event) {\n      var entry = _objectSpread({}, _this.state.newEntry);\n\n      var newEntry = updateObject(event, entry);\n\n      _this.setState({\n        newEntry: newEntry\n      });\n\n      var isComplete = true;\n      Object.keys(newEntry).forEach(function (key) {\n        var value = newEntry[key];\n\n        if (value === '' && value !== 'classifier') {\n          isComplete = false;\n        }\n      });\n\n      _this.setState({\n        isComplete: isComplete\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      if (_this.state.isComplete) {\n        var setLoading = _this.props.setLoading;\n        var newEntry = _this.state.newEntry;\n        setLoading(true);\n        apiRequest({\n          endPoint: '/add-entry',\n          method: 'POST',\n          body: newEntry\n        }).then(function (entryData) {\n          setLoading(false);\n\n          if (entryData && entryData.error != null) {\n            var _entryData$error = entryData.error,\n                title = _entryData$error.title,\n                message = _entryData$error.message;\n            optionAlert({\n              title: title,\n              message: message\n            });\n          } else {\n            optionAlert({\n              title: \"Entry \\\"\".concat(newEntry.canto_word, \"\\\" Added!\"),\n              message: 'The entry has been successfully added to the dictionary.'\n            });\n\n            var emptyEntry = _objectSpread({}, _this.state.newEntry);\n\n            Object.keys(emptyEntry).forEach(function (key) {\n              emptyEntry[key] = '';\n            });\n\n            _this.setState({\n              newEntry: emptyEntry\n            });\n          }\n        }).catch(function () {\n          setLoading(false);\n          serverError();\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      newEntry: {\n        canto_word: '',\n        jyutping: '',\n        classifier: '',\n        english_word: '',\n        mandarin_word: '',\n        canto_sentence: '',\n        jyutping_sentence: '',\n        english_sentence: ''\n      },\n      isComplete: false\n    };\n    return _this;\n  }\n\n  _createClass(AddNewEntry, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          userEmail = _this$props.user.userEmail,\n          updateURL = _this$props.updateURL;\n      var SEARCH = routes.SEARCH;\n\n      if (userEmail !== 'brimac1634@gmail.com') {\n        updateURL(SEARCH);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      var isComplete = this.state.isComplete;\n      return React.createElement(MediaQuery, {\n        maxWidth: 574,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, function (matches) {\n        return React.createElement(\"div\", {\n          className: \"new-entry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"inner-new-entry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Welcome, \", user.userName), fields.fields.map(function (field) {\n          return React.createElement(TextInput, {\n            key: field.id,\n            placeHolder: field.name,\n            margin: \"20px 0\",\n            height: \"44px\",\n            id: field.id,\n            value: _this2.state[field.id],\n            handleChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n        }), fields.areas.map(function (field) {\n          return React.createElement(TextInput, {\n            key: field.id,\n            isTextArea: true,\n            placeHolder: field.name,\n            margin: \"20px 0\",\n            height: \"100px\",\n            id: field.id,\n            value: _this2.state[field.id],\n            handleChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          });\n        }), React.createElement(\"div\", {\n          className: \"add-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Button, {\n          title: \"Add Entry!\",\n          buttonType: \"ghost\",\n          icon: \"add\",\n          height: \"44px\",\n          margin: \"20px 0\",\n          isDisabled: !isComplete,\n          handleClick: _this2.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }))));\n      });\n    }\n  }]);\n\n  return AddNewEntry;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewEntry);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/Containers/AddNewEntry/AddNewEntry.js"],"names":["React","Component","connect","optionAlert","MediaQuery","TextInput","Button","apiRequest","setLoading","push","routes","updateObject","serverError","fields","mapStateToProps","state","user","mapDispatchToProps","dispatch","loading","updateURL","path","AddNewEntry","props","handleChange","event","entry","newEntry","setState","isComplete","Object","keys","forEach","key","value","handleSubmit","endPoint","method","body","then","entryData","error","title","message","canto_word","emptyEntry","catch","preventDefault","jyutping","classifier","english_word","mandarin_word","canto_sentence","jyutping_sentence","english_sentence","userEmail","SEARCH","matches","userName","map","field","id","name","areas"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './AddNewEntry.css';\nimport { connect } from 'react-redux';\nimport { optionAlert } from '../OptionAlert/OptionAlert';\nimport MediaQuery from 'react-responsive';\nimport TextInput from '../../Components/TextInput/TextInput';\nimport Button from '../../Components/Button/Button';\nimport apiRequest from '../../Helpers/apiRequest';\nimport { setLoading } from '../../Loading/actions';\nimport { push } from 'connected-react-router'\nimport { routes } from '../../Routing/constants';\nimport { updateObject, serverError } from '../../Helpers/helpers';\nimport fields from './AddNewEntryFields';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.user.user,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t\tupdateURL: (path) => dispatch(push(path)),\n\t}\n}\n\nclass AddNewEntry extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnewEntry: {\n\t\t\t\tcanto_word: '',\n\t\t\t    jyutping: '',\n\t\t\t    classifier: '',\n\t\t\t    english_word: '',\n\t\t\t    mandarin_word: '',\n\t\t\t    canto_sentence: '',\n\t\t\t    jyutping_sentence: '',\n\t\t\t    english_sentence: '',\n\t\t\t},\n\t\t\tisComplete: false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { user: { userEmail }, updateURL } = this.props;\n\t\tconst { SEARCH } = routes;\n\t\tif (userEmail !== 'brimac1634@gmail.com' ) {\n\t\t\tupdateURL(SEARCH)\n\t\t}\n\t}\n\n\thandleChange = (event) => {\n\t\tconst entry = { ...this.state.newEntry }\n\t    const newEntry = updateObject(event, entry)\n\t    this.setState({newEntry})\n\t    let isComplete = true;\n\t    Object.keys(newEntry).forEach(key => {\n\t    \tconst value = newEntry[key];\n\t    \tif (value === '' && value !== 'classifier') {\n\t    \t\tisComplete = false\n\t    \t}\n\t    })\n\t    this.setState({isComplete})\n\t}\n\n\thandleSubmit = (event) => {\n\t\tif (this.state.isComplete) {\n\t\t\tconst { setLoading } = this.props;\n\t\t\tconst { newEntry } = this.state;\n\t\t\tsetLoading(true)\n\t\t\tapiRequest({\n\t\t\t\tendPoint: '/add-entry',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: newEntry \n\t\t\t})\n\t\t\t.then(entryData => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (entryData && entryData.error != null) {\n\t\t\t\t\tconst { title, message } = entryData.error;\n\t\t\t\t\toptionAlert({\n\t\t\t\t\t    title,\n\t\t\t\t\t    message\n\t\t\t\t    })\n\t\t\t\t} else {\n\t\t\t\t\toptionAlert({\n\t\t\t\t\t    title: `Entry \"${newEntry.canto_word}\" Added!`,\n\t\t\t\t\t    message: 'The entry has been successfully added to the dictionary.'\n\t\t\t\t    })\n\t\t\t\t    let emptyEntry = { ...this.state.newEntry };\n\t\t\t\t    Object.keys(emptyEntry).forEach(key => {\n\t\t\t\t    \temptyEntry[key] = '';\n\t\t\t\t    })\n\t\t\t\t    this.setState({newEntry: emptyEntry});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tserverError()\n\t\t\t})\n\t\t}\n\t    event.preventDefault();\n\t}\n\n\t\n\n\trender() {\n\t\tconst { user } = this.props;\n\t\tconst { isComplete } = this.state;\n\n\t\treturn (\n\t\t\t<MediaQuery maxWidth={574}>\n\t\t\t\t{(matches) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='new-entry'>\n\t\t\t\t\t\t<div className='inner-new-entry'>\n\t\t\t\t\t\t\t<h2>Welcome, {user.userName}</h2>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.fields.map(field => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\t\t\t\tkey={field.id}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={field.name}\n\t\t\t\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state[field.id]}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.areas.map(field => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\t\t\t\tkey={field.id}\n\t\t\t\t\t\t\t\t\t\t\tisTextArea={true}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={field.name}\n\t\t\t\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\t\t\t\theight='100px'\n\t\t\t\t\t\t\t\t\t\t\tid={field.id}\n\t\t\t\t\t\t\t\t\t\t\tvalue={this.state[field.id]}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<div className='add-container'>\n\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\ttitle='Add Entry!'\n\t\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\t\ticon='add' \n\t\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\t\tmargin='20px 0'\n\t\t\t\t\t\t\t\t\tisDisabled={!isComplete}\n\t\t\t\t\t\t\t\t\thandleClick={this.handleSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}}\n\t\t\t</MediaQuery>\n\t\t);\n\t}\t\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewEntry);\n"]},"metadata":{},"sourceType":"module"}