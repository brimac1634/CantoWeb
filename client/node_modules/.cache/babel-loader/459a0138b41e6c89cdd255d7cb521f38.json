{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/profile/profile.component.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport MediaQuery from 'react-responsive';\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport Button from '../../components/button/button.component';\nimport { routes } from '../../redux/routing/routing.constants';\nimport apiRequest from '../../helpers/apiRequest';\nimport { setLoading as _setLoading } from '../../redux/loading/loading.actions';\nimport { setUser } from '../../redux/sign-in/sign-in.actions';\nimport { deleteToken, connectionError } from '../../helpers/helpers';\nimport './profile.styles.scss';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    },\n    updateURL: function updateURL(path) {\n      return dispatch(push(path));\n    },\n    updateUser: function updateUser(user) {\n      return dispatch(setUser(user));\n    }\n  };\n};\n\nvar Profile = function Profile(_ref) {\n  var _ref$user = _ref.user,\n      userName = _ref$user.userName,\n      userEmail = _ref$user.userEmail,\n      setLoading = _ref.setLoading,\n      updateURL = _ref.updateURL,\n      updateUser = _ref.updateUser;\n  var RESET = routes.RESET,\n      SEARCH = routes.SEARCH;\n\n  var verifyDeletion = function verifyDeletion(event) {\n    optionAlert({\n      title: 'Account Deletion',\n      message: 'Are you sure you want to delete your account and all your saved data?',\n      buttons: [{\n        label: 'Yes',\n        onClick: function onClick() {\n          return handleDelete();\n        }\n      }, {\n        label: 'No',\n        onClick: function onClick() {}\n      }]\n    });\n    event.preventDefault();\n  };\n\n  var handleDelete = function handleDelete() {\n    setLoading(true);\n    apiRequest({\n      endPoint: '/delete-account',\n      method: 'POST',\n      body: {\n        userEmail: userEmail\n      }\n    }).then(function (res) {\n      setLoading(false);\n\n      if (res && res.error != null) {\n        var _res$error = res.error,\n            title = _res$error.title,\n            message = _res$error.message;\n        optionAlert({\n          title: title,\n          message: message\n        });\n      } else {\n        updateUser('');\n        deleteToken();\n        optionAlert({\n          title: 'Account Deleted',\n          message: 'Your user account has successfully been deleted.',\n          buttons: [{\n            label: 'Okay',\n            onClick: function onClick() {\n              return updateURL(SEARCH);\n            }\n          }]\n        });\n      }\n    }).catch(function () {\n      setLoading(false);\n      connectionError();\n    });\n  };\n\n  return React.createElement(MediaQuery, {\n    maxWidth: 574,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, function (matches) {\n    return React.createElement(\"div\", {\n      className: \"profile-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Hello, \", userName, \"!\"), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Want to reset your password?\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"You will need to verify your email to reset your password.\"), React.createElement(Button, {\n      title: \"Reset\",\n      buttonType: \"ghost\",\n      icon: \"shuffle\",\n      height: \"44px\",\n      margin: \"0\",\n      width: \"100px\",\n      handleClick: function handleClick() {\n        return updateURL(RESET);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Wish to delete you account?\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Beware! This will delete your account and any saved data related to your account.\"), React.createElement(Button, {\n      title: \"Delete\",\n      buttonType: \"ghost\",\n      icon: \"multiply\",\n      height: \"44px\",\n      margin: \"0\",\n      width: \"100px\",\n      handleClick: verifyDeletion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))));\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/pages/profile/profile.component.js"],"names":["React","connect","push","MediaQuery","optionAlert","Button","routes","apiRequest","setLoading","setUser","deleteToken","connectionError","mapStateToProps","state","user","mapDispatchToProps","dispatch","loading","updateURL","path","updateUser","Profile","userName","userEmail","RESET","SEARCH","verifyDeletion","event","title","message","buttons","label","onClick","handleDelete","preventDefault","endPoint","method","body","then","res","error","catch","matches"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router'\nimport MediaQuery from 'react-responsive';\n\nimport { optionAlert } from '../../components/option-alert/option-alert.component';\nimport Button from '../../components/button/button.component';\nimport { routes } from '../../redux/routing/routing.constants';\n\nimport apiRequest from '../../helpers/apiRequest';\nimport { setLoading } from '../../redux/loading/loading.actions';\nimport { setUser } from '../../redux/sign-in/sign-in.actions';\nimport { deleteToken, connectionError } from '../../helpers/helpers';\n\nimport './profile.styles.scss';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tuser: state.user.user,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t\tupdateURL: (path) => dispatch(push(path)),\n\t\tupdateUser: (user) => dispatch(setUser(user)),\n\t}\n}\n\nconst Profile = ({ user: { userName, userEmail }, setLoading, updateURL, updateUser }) => {\n\n\tconst { RESET, SEARCH } = routes;\n\n\tconst verifyDeletion = (event) => {\n\t\toptionAlert({\n\t\t    title: 'Account Deletion',\n\t\t    message: 'Are you sure you want to delete your account and all your saved data?',\n\t\t    buttons: [\n\t\t    \t{\n\t\t    \t\tlabel: 'Yes',\n\t\t\t        onClick: () => handleDelete()\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\tlabel: 'No',\n\t\t\t        onClick: () => {}\n\t\t    \t},\n\t\t    ]\n\t    })\n\t    event.preventDefault();\n\t}\n\n\tconst handleDelete = () => {\n\t\tsetLoading(true)\n\t\tapiRequest({\n\t\t\tendPoint: '/delete-account',\n\t\t\tmethod: 'POST',\n\t\t\tbody: {userEmail} \n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tif (res && res.error != null) {\n\t\t\t\t\tconst { title, message } = res.error;\n\t\t\t\t\toptionAlert({title, message})\n\t\t\t\t} else {\n\t\t\t\t\tupdateUser('');\n\t\t\t\t\tdeleteToken()\n\t\t\t\t\toptionAlert({\n\t\t\t\t\t    title: 'Account Deleted',\n\t\t\t\t\t    message: 'Your user account has successfully been deleted.',\n\t\t\t\t\t    buttons: [\n\t\t\t\t\t    \t{\n\t\t\t\t\t    \t\tlabel: 'Okay',\n\t\t\t\t\t\t        onClick: () => updateURL(SEARCH)\n\t\t\t\t\t    \t},\n\t\t\t\t\t    ]\n\t\t\t\t    })\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetLoading(false)\n\t\t\t\tconnectionError()\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<MediaQuery maxWidth={574}>\n\t\t\t{(matches) => {\n\t\t\treturn (\n\t\t\t\t<div className='profile-page'>\n\t\t\t\t\t<div className='profile'>\n\t\t\t\t\t\t<h2 className='heading'>Hello, {userName}!</h2>\n\t\t\t\t\t\t<div className='section'>\n\t\t\t\t\t\t\t<p><strong>Want to reset your password?</strong></p>\n\t\t\t\t\t\t\t<p>You will need to verify your email to reset your password.</p>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttitle='Reset'\n\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\ticon='shuffle' \n\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\tmargin='0'\n\t\t\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\t\t\thandleClick={()=>updateURL(RESET)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='section'>\n\t\t\t\t\t\t\t<p><strong>Wish to delete you account?</strong></p>\n\t\t\t\t\t\t\t<p>Beware! This will delete your account and any saved data related to your account.</p>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttitle='Delete'\n\t\t\t\t\t\t\t\tbuttonType='ghost' \n\t\t\t\t\t\t\t\ticon='multiply' \n\t\t\t\t\t\t\t\theight='44px'\n\t\t\t\t\t\t\t\tmargin='0'\n\t\t\t\t\t\t\t\twidth='100px'\n\t\t\t\t\t\t\t\thandleClick={verifyDeletion}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}}\n\t\t</MediaQuery>\n\t);\t\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}