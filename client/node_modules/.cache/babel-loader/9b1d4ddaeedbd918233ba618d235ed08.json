{"ast":null,"code":"var _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/src/Components/EntriesList/EntriesList.js\";\nimport React from 'react';\nimport './EntriesList.css';\nimport EntryRow from './EntryRow/EntryRow';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../../Routing/constants';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    search: state.router.location.search\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateURL: function updateURL(url) {\n      return dispatch(push(url));\n    }\n  };\n};\n\nvar EntryList = function EntryList(_ref) {\n  var entries = _ref.entries,\n      selectEntry = _ref.selectEntry,\n      searchComplete = _ref.searchComplete,\n      updateURL = _ref.updateURL,\n      search = _ref.search;\n  var ghostRows = [0, 1, 2, 3, 4, 5, 6];\n\n  var getDelay = function getDelay(i) {\n    var add = i * 0.1;\n    return 0 + add;\n  };\n\n  var renderMessage = function renderMessage() {\n    var CONTACT = routes.CONTACT;\n\n    if (entries.length === 0 && searchComplete && search) {\n      return React.createElement(\"div\", {\n        className: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"no-match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Don't see what you're looking for?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"Request for it to be added!\"), React.createElement(Button, {\n        title: \"Request Word\",\n        buttonType: \"ghost\",\n        margin: \"10px 5px\",\n        handleClick: function handleClick() {\n          return updateURL(CONTACT);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"entry-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, renderMessage(), entries.length || searchComplete && search ? entries.map(function (entry, i) {\n    return React.createElement(EntryRow, {\n      delay: getDelay(i),\n      key: entry.entry_id,\n      selectEntry: selectEntry,\n      entry: entry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }) : ghostRows.map(function (i) {\n    return React.createElement(EntryRow, {\n      key: i,\n      entry: \"\",\n      delay: getDelay(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryList);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/src/Components/EntriesList/EntriesList.js"],"names":["React","EntryRow","Button","connect","push","routes","mapStateToProps","state","ownProps","search","router","location","mapDispatchToProps","dispatch","updateURL","url","EntryList","entries","selectEntry","searchComplete","ghostRows","getDelay","i","add","renderMessage","CONTACT","length","map","entry","entry_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './EntriesList.css';\nimport EntryRow from './EntryRow/EntryRow';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../../Routing/constants';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    search: state.router.location.search,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateURL: (url) => dispatch(push(url)),\n\t}\n} \n\nconst EntryList = ({ entries, selectEntry, searchComplete, updateURL, search }) => {\n\tlet ghostRows = [0,1,2,3,4,5,6]\n\n\tconst getDelay = (i) => {\n\t\tconst add = i * 0.1\n\t\treturn 0 + add\n\t}\n\n\tconst renderMessage = () => {\n\t\tconst { CONTACT } = routes;\n\t\tif (entries.length === 0 && searchComplete && search) {\n\t\t\treturn (\n\t\t\t\t<div className='vertical'>\n\t\t\t\t\t<p className='no-match'>Don't see what you're looking for?<br/>Request for it to be added!</p>\n\t\t\t\t\t<Button \n\t\t\t\t\t\ttitle='Request Word'\n\t\t\t\t\t\tbuttonType='ghost'\n\t\t\t\t\t\tmargin='10px 5px'\n\t\t\t\t\t\thandleClick={()=>updateURL(CONTACT)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='entry-list'>\n\t\t\t{renderMessage()}\n\t\t\t{\n\t\t\t\tentries.length || (searchComplete && search)\n\t\t\t\t?   entries.map((entry, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<EntryRow\n\t\t\t\t\t\t\t\tdelay={getDelay(i)}\n\t\t\t\t\t\t\t\tkey={entry.entry_id}\n\t\t\t\t\t\t\t\tselectEntry={selectEntry}\n\t\t\t\t\t\t\t\tentry={entry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t:   ghostRows.map(i => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<EntryRow\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tentry=''\n\t\t\t\t\t\t\t\tdelay={getDelay(i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryList);"]},"metadata":{},"sourceType":"module"}