{"ast":null,"code":"import _classCallCheck from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/brianmacpherson/Desktop/cantotalkweb/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brianmacpherson/Desktop/cantotalkweb/client/src/pages/search/search.component.js\";\nimport React, { Component } from 'react';\nimport './search.styles.css';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport MediaQuery from 'react-responsive';\nimport queryString from 'query-string';\nimport { serverError, connectionError, requestToLogin, validateUser } from '../../helpers/helpers';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport EntryView from '../../components/entry-view/entry-view.component';\nimport SlideUpEntry from '../../components/slide-up-entry/slide-up-entry.component';\nimport { setLoading as _setLoading } from '../../redux/loading/loading.actions';\nimport { setMobileEntry as _setMobileEntry } from '../../redux/search/search.actions';\nimport { setTempSearch as _setTempSearch } from '../../redux/search-bar/search-bar.actions';\nimport { setPrevRoute as _setPrevRoute } from '../../redux/routing/routing.actions';\nimport apiRequest from '../../helpers/apiRequest';\nimport { routes } from '../../redux/routing/routing.constants';\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    user: state.user.user,\n    mobileSelectedEntry: state.search.mobileEntry,\n    pathName: state.router.location.pathname,\n    hash: state.router.location.hash,\n    search: state.router.location.search,\n    tempSearchKey: state.temp.key,\n    searchType: state.temp.searchType\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMobileEntry: function setMobileEntry(entryID) {\n      return dispatch(_setMobileEntry(entryID));\n    },\n    updateURL: function updateURL(searchKey) {\n      return dispatch(push(searchKey));\n    },\n    setPrevRoute: function setPrevRoute(prevRoute) {\n      return dispatch(_setPrevRoute(prevRoute));\n    },\n    setTempSearch: function setTempSearch(key) {\n      return dispatch(_setTempSearch(key));\n    },\n    setLoading: function setLoading(loading) {\n      return dispatch(_setLoading(loading));\n    }\n  };\n};\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n\n    _this.handleSearchKey = function (key) {\n      var setTempSearch = _this.props.setTempSearch;\n      setTempSearch(key);\n\n      _this.handleSearch(key);\n    };\n\n    _this.handleSearch = function (searchKey) {\n      var _this$props = _this.props,\n          setLoading = _this$props.setLoading,\n          searchType = _this$props.searchType;\n\n      _this.setState({\n        searchComplete: false\n      });\n\n      setLoading(true);\n\n      if (searchKey) {\n        apiRequest('POST', '/search', {\n          searchKey: searchKey,\n          searchType: searchType\n        }).then(function (entries) {\n          if (_this._isMounted) {\n            if (Array.isArray(entries)) {\n              _this.setState({\n                entries: entries\n              });\n            } else {\n              _this.setState({\n                entries: []\n              });\n            }\n\n            _this.setState({\n              searchComplete: true\n            });\n          }\n\n          setLoading(false);\n        }).catch(function () {\n          setLoading(false);\n          _this._isMounted && _this.setState({\n            searchComplete: true\n          });\n          connectionError();\n        });\n      } else {\n        _this.setState({\n          entries: []\n        });\n      }\n    };\n\n    _this.filterEntries = function (userID, filterType) {\n      var _this$props2 = _this.props,\n          updateURL = _this$props2.updateURL,\n          setLoading = _this$props2.setLoading;\n      var SEARCH = routes.SEARCH;\n      setLoading(true);\n      apiRequest({\n        endPoint: filterType,\n        method: 'POST',\n        body: {\n          userID: userID\n        }\n      }).then(function (entries) {\n        setLoading(false);\n\n        if (entries.error != null) {\n          serverError();\n        } else {\n          if (Array.isArray(entries)) {\n            _this._isMounted && _this.setState({\n              entries: entries\n            });\n          } else {\n            _this._isMounted && _this.setState({\n              entries: []\n            });\n          }\n        }\n      }).catch(function () {\n        setLoading(false);\n        connectionError();\n        updateURL(SEARCH);\n      });\n    };\n\n    _this.handleEntrySelect = function (entry) {\n      var _this$props3 = _this.props,\n          setMobileEntry = _this$props3.setMobileEntry,\n          updateURL = _this$props3.updateURL,\n          userID = _this$props3.user.userID;\n      var entry_id = entry.entry_id;\n\n      _this.setState({\n        selectedEntry: entry\n      });\n\n      var searchURL = _this.setSearchURL({\n        entryID: entry_id\n      });\n\n      updateURL(searchURL);\n      setMobileEntry(entry_id);\n\n      if (userID !== '' && userID != null) {\n        _this.addEntryToRecent(userID, entry_id);\n      }\n    };\n\n    _this.addEntryToRecent = function (userID, entryID) {\n      apiRequest({\n        endPoint: '/recent/add',\n        method: 'POST',\n        body: {\n          userID: userID,\n          entryID: entryID\n        }\n      }).catch(function () {\n        return console.log('unable to save recent');\n      });\n    };\n\n    _this.setSearchURL = function (_ref) {\n      var path = _ref.path,\n          word = _ref.word,\n          entryID = _ref.entryID;\n      var _this$props4 = _this.props,\n          pathName = _this$props4.pathName,\n          search = _this$props4.search,\n          hash = _this$props4.hash;\n      var SEARCH = routes.SEARCH;\n      pathName = path ? path : pathName;\n      search = word ? \"?searchkey=\".concat(word) : search;\n      hash = entryID ? \"#\".concat(entryID) : hash;\n      var url = \"\".concat(pathName).concat(search).concat(hash);\n\n      if (pathName === SEARCH) {\n        sessionStorage.setItem('searchURL', JSON.stringify(url));\n      }\n\n      return url;\n    };\n\n    _this._isMounted = false;\n    _this.state = {\n      entries: [],\n      selectedEntry: {},\n      searchComplete: false\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      var _this$props5 = this.props,\n          pathName = _this$props5.pathName,\n          updateURL = _this$props5.updateURL,\n          userID = _this$props5.user.userID,\n          setPrevRoute = _this$props5.setPrevRoute;\n      var SEARCH = routes.SEARCH,\n          RECENT = routes.RECENT,\n          FAVORITES = routes.FAVORITES,\n          LOGIN = routes.LOGIN;\n\n      if (pathName === SEARCH) {\n        this.loadSearchOnMount();\n      } else if (pathName === RECENT || pathName === FAVORITES) {\n        if (validateUser(userID)) {\n          this.filterEntries(userID, pathName);\n        } else {\n          requestToLogin(function () {\n            setPrevRoute(pathName);\n            updateURL(LOGIN);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props6 = this.props,\n          userID = _this$props6.user.userID,\n          search = _this$props6.search,\n          pathName = _this$props6.pathName,\n          setTempSearch = _this$props6.setTempSearch,\n          updateURL = _this$props6.updateURL,\n          setPrevRoute = _this$props6.setPrevRoute;\n      var RECENT = routes.RECENT,\n          FAVORITES = routes.FAVORITES,\n          SEARCH = routes.SEARCH,\n          LOGIN = routes.LOGIN;\n\n      if (prevProps.pathName !== pathName) {\n        if (pathName === FAVORITES || pathName === RECENT) {\n          if (validateUser(userID)) {\n            this.filterEntries(userID, pathName);\n          } else {\n            requestToLogin(function () {\n              setPrevRoute(pathName);\n              updateURL(LOGIN);\n            });\n          }\n        } else if (pathName === SEARCH) {\n          this.loadSearchOnMount();\n        }\n      } else if (pathName === SEARCH && prevProps.search !== search) {\n        if (search) {\n          var values = queryString.parse(search);\n          this.handleSearchKey(values.searchkey);\n        } else {\n          setTempSearch('');\n          this.setState({\n            entries: []\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      var setMobileEntry = this.props.setMobileEntry;\n      setMobileEntry('');\n    }\n  }, {\n    key: \"loadSearchOnMount\",\n    value: function loadSearchOnMount() {\n      var _this$props7 = this.props,\n          search = _this$props7.search,\n          updateURL = _this$props7.updateURL;\n      var TRANSITION = routes.TRANSITION;\n\n      if (search) {\n        var values = queryString.parse(search);\n        this.handleSearchKey(values.searchkey);\n      } else {\n        var cachedURL = JSON.parse(sessionStorage.getItem('searchURL'));\n\n        if (cachedURL != null) {\n          setTimeout(function () {\n            updateURL(cachedURL);\n          }, TRANSITION + 400);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          entries = _this$state.entries,\n          selectedEntry = _this$state.selectedEntry,\n          searchComplete = _this$state.searchComplete;\n      var mobileSelectedEntry = this.props.mobileSelectedEntry;\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(MediaQuery, {\n        minWidth: 700,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"split-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"entry-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(EntriesList, {\n        entries: entries,\n        selectEntry: this.handleEntrySelect,\n        searchComplete: searchComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"entry-view-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(EntryView, {\n        selectedEntry: selectedEntry,\n        updateFavs: this.filterEntries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })))), React.createElement(MediaQuery, {\n        maxWidth: 699,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"split-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"entry-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(EntriesList, {\n        entries: entries,\n        selectEntry: this.handleEntrySelect,\n        searchComplete: searchComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })), React.createElement(SlideUpEntry, {\n        isSelected: mobileSelectedEntry,\n        selectedEntry: selectedEntry,\n        updateFavs: this.filterEntries,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(SearchBar, {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/brianmacpherson/Desktop/cantotalkweb/client/src/pages/search/search.component.js"],"names":["React","Component","connect","push","MediaQuery","queryString","serverError","connectionError","requestToLogin","validateUser","SearchBar","EntriesList","EntryView","SlideUpEntry","setLoading","setMobileEntry","setTempSearch","setPrevRoute","apiRequest","routes","mapStateToProps","state","ownProps","user","mobileSelectedEntry","search","mobileEntry","pathName","router","location","pathname","hash","tempSearchKey","temp","key","searchType","mapDispatchToProps","dispatch","entryID","updateURL","searchKey","prevRoute","loading","Search","props","handleSearchKey","handleSearch","setState","searchComplete","then","entries","_isMounted","Array","isArray","catch","filterEntries","userID","filterType","SEARCH","endPoint","method","body","error","handleEntrySelect","entry","entry_id","selectedEntry","searchURL","setSearchURL","addEntryToRecent","console","log","path","word","url","sessionStorage","setItem","JSON","stringify","RECENT","FAVORITES","LOGIN","loadSearchOnMount","prevProps","values","parse","searchkey","TRANSITION","cachedURL","getItem","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './search.styles.css';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport MediaQuery from 'react-responsive';\nimport queryString from 'query-string';\nimport { serverError, connectionError, requestToLogin, validateUser } from '../../helpers/helpers';\nimport SearchBar from '../../components/search-bar/search-bar.component';\nimport EntriesList from '../../components/entries-list/entries-list.component';\nimport EntryView from '../../components/entry-view/entry-view.component';\nimport SlideUpEntry from '../../components/slide-up-entry/slide-up-entry.component';\nimport { setLoading } from '../../redux/loading/loading.actions';\nimport { setMobileEntry } from '../../redux/search/search.actions';\nimport { setTempSearch } from '../../redux/search-bar/search-bar.actions';\nimport { setPrevRoute } from '../../redux/routing/routing.actions';\nimport apiRequest from '../../helpers/apiRequest';\nimport { routes } from '../../redux/routing/routing.constants';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n  \tuser: state.user.user,\n    mobileSelectedEntry: state.search.mobileEntry,\n    pathName: state.router.location.pathname,\n    hash: state.router.location.hash,\n    search: state.router.location.search,\n    tempSearchKey: state.temp.key,\n    searchType: state.temp.searchType\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetMobileEntry: (entryID) => dispatch(setMobileEntry(entryID)),\n\t\tupdateURL: (searchKey) => dispatch(push(searchKey)),\n\t\tsetPrevRoute: (prevRoute) => dispatch(setPrevRoute(prevRoute)),\n\t\tsetTempSearch: (key) => dispatch(setTempSearch(key)),\n\t\tsetLoading: (loading) => dispatch(setLoading(loading)),\n\t}\n} \n\nclass Search extends Component {\n\tconstructor(props) {\n\t\tsuper()\n\t\tthis._isMounted = false;\n\t\tthis.state = {\n\t\t\tentries: [],\n\t\t\tselectedEntry: {},\n\t\t\tsearchComplete: false\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tlet { pathName, updateURL, user: { userID }, setPrevRoute } = this.props;\n\t\tconst { SEARCH, RECENT, FAVORITES, LOGIN } = routes;\n\n\t\tif (pathName === SEARCH) {\n\t\t\tthis.loadSearchOnMount()\n\t\t} else if (pathName === RECENT || pathName === FAVORITES) {\n\t\t\tif (validateUser(userID)) {\n\t\t\t\tthis.filterEntries(userID, pathName)\n\t\t\t} else {\n\t\t\t\trequestToLogin(()=>{\n\t\t\t\t\tsetPrevRoute(pathName)\n\t\t        \tupdateURL(LOGIN)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst {user: {userID}, search, pathName, setTempSearch, updateURL, setPrevRoute } = this.props;\n\t\tconst { RECENT, FAVORITES, SEARCH, LOGIN } = routes;\n\t\t\n\t\tif (prevProps.pathName !== pathName) {\n\t\t\tif (pathName === FAVORITES || pathName === RECENT) {\n\t\t\t\tif (validateUser(userID)) {\n\t\t\t\t\tthis.filterEntries(userID, pathName)\n\t\t\t\t} else {\n\t\t\t\t\trequestToLogin(()=>{\n\t\t\t\t\t\tsetPrevRoute(pathName)\n\t\t\t        \tupdateURL(LOGIN)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t} else if (pathName === SEARCH ) {\n\t\t\t\tthis.loadSearchOnMount()\n\t\t\t}\n\t\t} else if (pathName === SEARCH && prevProps.search !== search) {\n\t\t\tif (search) {\n\t\t\t\tconst values = queryString.parse(search)\n\t\t\t\tthis.handleSearchKey(values.searchkey)\n\t\t\t} else {\n\t\t\t\tsetTempSearch('')\n\t\t\t\tthis.setState({entries: []})\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t\tconst {setMobileEntry} = this.props;\n\t    setMobileEntry('');\n\t}\n\n\tloadSearchOnMount() {\n\t\tconst { search, updateURL } = this.props;\n\t\tconst { TRANSITION } = routes;\n\n\t\tif (search) {\n\t\t\tconst values = queryString.parse(search)\n\t\t\tthis.handleSearchKey(values.searchkey)\n\t\t} else {\n\t\t\tconst cachedURL = JSON.parse(sessionStorage.getItem('searchURL'))\n\t\t\tif (cachedURL != null) {\n\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\tupdateURL(cachedURL)\n\t\t\t\t}, TRANSITION + 400)\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSearchKey = (key) => {\n\t\tconst { setTempSearch } = this.props;\n\t\tsetTempSearch(key)\n\t\tthis.handleSearch(key)\n\t}\n\n\thandleSearch = (searchKey) => {\n\t\tconst { setLoading, searchType } = this.props;\n\t\tthis.setState({searchComplete: false})\n\t\tsetLoading(true)\n\t\tif (searchKey) {\n\t\t\tapiRequest('POST', '/search', {searchKey, searchType})\n\t\t\t.then(entries => {\n\t\t\t\tif (this._isMounted) {\n\t\t\t\t\tif (Array.isArray(entries)) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tentries: entries\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tentries: []\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({searchComplete: true})\n\t\t\t\t}\n\t\t\t\tsetLoading(false)\n\t\t\t})\n\t\t\t.catch(()=>{\n\t\t\t\tsetLoading(false)\n\t\t\t\tthis._isMounted && this.setState({searchComplete: true})\n\t\t\t\tconnectionError()\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tentries: []\n\t\t\t})\n\t\t}\n\t}\n\n\tfilterEntries = (userID, filterType) => {\n\t\tconst { updateURL, setLoading } = this.props;\n\t\tconst { SEARCH } = routes;\n\t\tsetLoading(true)\n\t\tapiRequest({\n\t\t\tendPoint: filterType,\n\t\t\tmethod: 'POST',\n\t\t\tbody: {userID} \n\t\t})\n\t\t.then(entries => {\n\t\t\tsetLoading(false)\n\t\t\tif (entries.error != null) {\n\t\t\t\tserverError()\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(entries)) {\n\t\t\t\t\tthis._isMounted && this.setState({entries})\n\t\t\t\t} else {\n\t\t\t\t\tthis._isMounted && this.setState({entries: []})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(()=>{\n\t\t\tsetLoading(false)\n\t\t\tconnectionError()\n\t\t\tupdateURL(SEARCH)\n\t\t})\n\t}\n\n\thandleEntrySelect = (entry) => {\n\t\tconst {\n\t\t\tsetMobileEntry, \n\t\t\tupdateURL,\n\t\t\tuser: {userID}\n\t\t} = this.props;\n\t\tconst { entry_id } = entry;\n\t\tthis.setState({selectedEntry: entry})\n\t\tconst searchURL = this.setSearchURL({entryID: entry_id})\n\t\tupdateURL(searchURL)\n\t\tsetMobileEntry(entry_id);\n\t\tif (userID !== '' && userID != null) {\n\t\t\tthis.addEntryToRecent(userID, entry_id);\n\t\t}\n\t}\n\n\taddEntryToRecent = (userID, entryID) => {\n\t\tapiRequest({\n\t\t\tendPoint: '/recent/add',\n\t\t\tmethod: 'POST',\n\t\t\tbody: {userID, entryID} \n\t\t})\n\t\t.catch(() => console.log('unable to save recent'))\n\t}\n\n\tsetSearchURL = ({path, word, entryID}) => {\n\t\tlet { pathName, search, hash } = this.props;\n\t\tconst { SEARCH } = routes;\n\t\tpathName = path ? path : pathName;\n\t\tsearch = word ? `?searchkey=${word}` : search\n\t\thash = entryID ? `#${entryID}` : hash\n\t\tconst url = `${pathName}${search}${hash}`\n\t\tif (pathName === SEARCH) {\n\t\t\tsessionStorage.setItem('searchURL', JSON.stringify(url));\n\t\t}\n\t\treturn url\n\t};\n\n\trender() {\n\t\tconst { entries, selectedEntry, searchComplete } = this.state;\n\t\tconst { mobileSelectedEntry } = this.props;\n\n\t\t\n\t\treturn (\n\t\t\t<div className='page'>\n\t\t\t\t<MediaQuery minWidth={700}>\n\t\t\t\t\t<div className='split-container'>\n\t\t\t\t\t\t<div className='entry-list-container'>\n\t\t\t\t\t\t\t<EntriesList  \n\t\t\t\t\t\t\t\tentries={entries}\n\t\t\t\t\t\t\t\tselectEntry={this.handleEntrySelect}\n\t\t\t\t\t\t\t\tsearchComplete={searchComplete}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='entry-view-container'>\n\t\t\t\t\t\t\t<EntryView \n\t\t\t\t\t\t\t\tselectedEntry={selectedEntry} \n\t\t\t\t\t\t\t\tupdateFavs={this.filterEntries}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</MediaQuery>\n\t\t\t\t<MediaQuery maxWidth={699}>\n\t\t\t\t\t<div className='split-container'>\n\t\t\t\t\t\t<div className='entry-list-container'>\n\t\t\t\t\t\t\t<EntriesList  \n\t\t\t\t\t\t\t\tentries={entries}\n\t\t\t\t\t\t\t\tselectEntry={this.handleEntrySelect}\n\t\t\t\t\t\t\t\tsearchComplete={searchComplete}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<SlideUpEntry \n\t\t\t\t\t\t\tisSelected={mobileSelectedEntry} \n\t\t\t\t\t\t\tselectedEntry={selectedEntry}\n\t\t\t\t\t\t\tupdateFavs={this.filterEntries}\n\t\t\t\t\t\t/> \n\t\t\t\t\t</div>\n\t\t\t\t</MediaQuery>\n\t\t\t\t<SearchBar \n\t\t\t\t\tclassName='search-bar'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);"]},"metadata":{},"sourceType":"module"}